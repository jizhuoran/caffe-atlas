#ifdef __CCE_KT_TEST__
#define __aicore__ 
#else
#define __aicore__ [aicore]
#endif


#define VERIFY_L2Buffer_OK(l2DataIndex) \
	(0x01 & (((0xFF)&(~l2_in_main)) >> (l2DataIndex)))

extern "C"  __global__ __aicore__ void matmul_op_64_800_512_NTA_TB_bias__kernel0(__gm__ half* __restrict__ tensor_a, __gm__ half* __restrict__ tensor_b, __gm__ half* __restrict__ tensor_blas, __gm__ half* __restrict__ tensor_c_gm,int64_t index0, uint64_t offset0, int64_t index1, uint64_t offset1, int64_t index2, uint64_t offset2, int64_t index3, uint64_t offset3) {
  if (index0 >= 0) {
    if (VERIFY_L2Buffer_OK(index0)) {
      tensor_a = (__gm__ half*)((uint64_t)l2_vaddr_base + offset0);
    }
  }
  if (index1 >= 0) {
    if (VERIFY_L2Buffer_OK(index1)) {
      tensor_b = (__gm__ half*)((uint64_t)l2_vaddr_base + offset1);
    }
  }
  if (index2 >= 0) {
    if (VERIFY_L2Buffer_OK(index2)) {
      tensor_blas = (__gm__ half*)((uint64_t)l2_vaddr_base + offset2);
    }
  }
  if (index3 >= 0) {
    if (VERIFY_L2Buffer_OK(index3)) {
      tensor_c_gm = (__gm__ half*)((uint64_t)l2_vaddr_base + offset3);
    }
  }
set_vector_mask((uint64_t)-1, (uint64_t)-1);
__ubuf__   half* tensor_bias_ub = (__ubuf__  half *)get_imm(0);
__cc__   float* tensor_bias_l0c_1 = (__cc__  float *)get_imm(0);
__ubuf__   half* tensor_a_ub_3 = (__ubuf__  half *)get_imm(512);
__ubuf__   half* tensor_a_ub_fract_4 = (__ubuf__  half *)get_imm(8704);
__cbuf__   half* tensor_a_l1_5 = (__cbuf__  half *)get_imm(0);
__ubuf__   half* tensor_b_ub_6 = (__ubuf__  half *)get_imm(16896);
__ubuf__   half* tensor_b_ub_fract_7 = (__ubuf__  half *)get_imm(49664);
__cbuf__   half* tensor_b_l1_8 = (__cbuf__  half *)get_imm(8192);
__ca__   half* tensor_a_l0a_9 = (__ca__  half *)get_imm(0);
__cb__   half* tensor_b_l0b_10 = (__cb__  half *)get_imm(0);
__ubuf__   half* tensor_a_ub_11 = (__ubuf__  half *)get_imm(82432);
__ubuf__   half* tensor_a_ub_fract_12 = (__ubuf__  half *)get_imm(90624);
__ubuf__   half* tensor_b_ub_14 = (__ubuf__  half *)get_imm(98816);
__ca__   half* tensor_a_l0a_17 = (__ca__  half *)get_imm(8192);
__cb__   half* tensor_b_l0b_18 = (__cb__  half *)get_imm(32768);
__ubuf__   half* tensor_a_ub = (__ubuf__  half *)get_imm(131584);
__ubuf__   half* tensor_a_ub_fract = (__ubuf__  half *)get_imm(0);
__cbuf__   half* tensor_a_l1 = (__cbuf__  half *)get_imm(0);
__ubuf__   half* tensor_b_ub = (__ubuf__  half *)get_imm(135680);
__ubuf__   half* tensor_b_ub_fract = (__ubuf__  half *)get_imm(4096);
__cbuf__   half* tensor_b_l1 = (__cbuf__  half *)get_imm(4096);
__ca__   half* tensor_a_l0a = (__ca__  half *)get_imm(0);
__cb__   half* tensor_b_l0b = (__cb__  half *)get_imm(0);
__ubuf__   half* tensor_c_ub = (__ubuf__  half *)get_imm(0);
__ubuf__   half* tensor_c_ub_fract_2 = (__ubuf__  half *)get_imm(32768);
__ubuf__   half* tensor_bias_ub1 = (__ubuf__  half *)get_imm(152064);
__ubuf__   half* tensor_a_ub_21 = (__ubuf__  half *)get_imm(152576);
__ubuf__   half* tensor_a_ub_fract_22 = (__ubuf__  half *)get_imm(65536);
__ubuf__   half* tensor_b_ub_24 = (__ubuf__  half *)get_imm(160768);
__ubuf__   half* tensor_b_ub_fract_25 = (__ubuf__  half *)get_imm(193536);
__ubuf__   half* tensor_a_ub_29 = (__ubuf__  half *)get_imm(226304);
__ubuf__   half* tensor_a_ub_fract_30 = (__ubuf__  half *)get_imm(73728);
__ubuf__   half* tensor_a_ub1 = (__ubuf__  half *)get_imm(90624);
__ubuf__   half* tensor_a_ub_fract1 = (__ubuf__  half *)get_imm(65536);
__ubuf__   half* tensor_b_ub1 = (__ubuf__  half *)get_imm(131584);
__ubuf__   half* tensor_b_ub_fract1 = (__ubuf__  half *)get_imm(147968);
__ubuf__   half* tensor_c_ub1 = (__ubuf__  half *)get_imm(131584);
__ubuf__   half* tensor_c_ub_fract_20 = (__ubuf__  half *)get_imm(164352);
  set_flag(PIPE_M, PIPE_MTE1, EVENT_ID1);
  set_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
  set_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID1);
  set_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
  set_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID0);
  set_vector_mask((uint64_t)18446744073709551615, (uint64_t)18446744073709551615);
  copy_gm_to_ubuf(((__ubuf__ half *)tensor_bias_ub + 0), ((__gm__ half *)tensor_blas + 0), 0, 1, 16, 0, 0);
  set_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
  wait_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
  for (int32_t brc_part = 0; brc_part < 4; ++brc_part) {
    broadcast_ub_to_cc(((__cc__ float *)tensor_bias_l0c_1 + (brc_part * 256)), ((__ubuf__ half *)tensor_bias_ub + 0), 16, 1, 0, 3);
  }
  set_flag(PIPE_V, PIPE_MTE2, EVENT_ID0);
  set_flag(PIPE_V, PIPE_MTE2, EVENT_ID1);
  set_flag(PIPE_V, PIPE_MTE2, EVENT_ID2);
  set_flag(PIPE_V, PIPE_MTE2, EVENT_ID3);
  for (int32_t kb_outer_db = 0; kb_outer_db < 6; ++kb_outer_db) {
    wait_flag(PIPE_V, PIPE_MTE2, EVENT_ID0);
    copy_gm_to_ubuf(((__ubuf__ half *)tensor_a_ub_3 + 0), ((__gm__ half *)tensor_a + (kb_outer_db * 128)), 0, 64, 4, 46, 0);
    set_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    for (int32_t iter_lower_outer_0 = 0; iter_lower_outer_0 < 4; ++iter_lower_outer_0) {
      for (int32_t iter_cut_axis_1 = 0; iter_cut_axis_1 < 2; ++iter_cut_axis_1) {
        vmax(((__ubuf__ half *)tensor_a_ub_fract_4 + ((iter_lower_outer_0 * 1024) + (iter_cut_axis_1 * 128))), ((__ubuf__ half *)tensor_a_ub_3 + ((iter_lower_outer_0 * 1024) + (iter_cut_axis_1 * 512))), ((__ubuf__ half *)tensor_a_ub_3 + ((iter_lower_outer_0 * 1024) + (iter_cut_axis_1 * 512))), (uint8_t)4, (uint8_t)1, (uint8_t)4, (uint8_t)4, (uint8_t)16, (uint8_t)1, (uint8_t)1);
      }
    }
    set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    set_flag(PIPE_V, PIPE_MTE2, EVENT_ID0);
    wait_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID0);
    wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    copy_ubuf_to_cbuf(((__cbuf__ half *)tensor_a_l1_5 + 0), ((__ubuf__ half *)tensor_a_ub_fract_4 + 0), 0, 1, 256, 0, 0);
    set_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID0);
    wait_flag(PIPE_V, PIPE_MTE2, EVENT_ID1);
    copy_gm_to_ubuf(((__ubuf__ half *)tensor_b_ub_6 + 0), ((__gm__ half *)tensor_b + (kb_outer_db * 128)), 0, 256, 4, 46, 0);
    set_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    for (int32_t iter_cut_axis_11 = 0; iter_cut_axis_11 < 4; ++iter_cut_axis_11) {
      vmax(((__ubuf__ half *)tensor_b_ub_fract_7 + (iter_cut_axis_11 * 4096)), ((__ubuf__ half *)tensor_b_ub_6 + (iter_cut_axis_11 * 16)), ((__ubuf__ half *)tensor_b_ub_6 + (iter_cut_axis_11 * 16)), (uint8_t)32, (uint8_t)1, (uint8_t)4, (uint8_t)4, (uint8_t)8, (uint8_t)32, (uint8_t)32);
    }
    set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    set_flag(PIPE_V, PIPE_MTE2, EVENT_ID1);
    wait_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID1);
    wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    copy_ubuf_to_cbuf(((__cbuf__ half *)tensor_b_l1_8 + 0), ((__ubuf__ half *)tensor_b_ub_fract_7 + 0), 0, 1, 1024, 0, 0);
    set_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID1);
    set_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
    wait_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID0);
    load_cbuf_to_ca(((__ca__ half *)tensor_a_l0a_9 + 0), ((__cbuf__ half *)tensor_a_l1_5 + 0), 0, 16, 1, 0, 0);
    set_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID0);
    wait_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID1);
    load_cbuf_to_cb(((__cb__ half *)tensor_b_l0b_10 + 0), ((__cbuf__ half *)tensor_b_l1_8 + 0), 0, 64, 1, 0, 0);
    set_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
    set_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID1);
    wait_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
    mad(((__cc__ float *)tensor_bias_l0c_1 + 0), ((__ca__ half *)tensor_a_l0a_9 + 0), ((__cb__ half *)tensor_b_l0b_10 + 0), 64, 64, 256, (int8_t)0);
    set_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
    wait_flag(PIPE_V, PIPE_MTE2, EVENT_ID2);
    copy_gm_to_ubuf(((__ubuf__ half *)tensor_a_ub_11 + 0), ((__gm__ half *)tensor_a + ((kb_outer_db * 128) + 64)), 0, 64, 4, 46, 0);
    set_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    for (int32_t iter_lower_outer_01 = 0; iter_lower_outer_01 < 4; ++iter_lower_outer_01) {
      for (int32_t iter_cut_axis_12 = 0; iter_cut_axis_12 < 2; ++iter_cut_axis_12) {
        vmax(((__ubuf__ half *)tensor_a_ub_fract_12 + ((iter_lower_outer_01 * 1024) + (iter_cut_axis_12 * 128))), ((__ubuf__ half *)tensor_a_ub_11 + ((iter_lower_outer_01 * 1024) + (iter_cut_axis_12 * 512))), ((__ubuf__ half *)tensor_a_ub_11 + ((iter_lower_outer_01 * 1024) + (iter_cut_axis_12 * 512))), (uint8_t)4, (uint8_t)1, (uint8_t)4, (uint8_t)4, (uint8_t)16, (uint8_t)1, (uint8_t)1);
      }
    }
    set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    set_flag(PIPE_V, PIPE_MTE2, EVENT_ID2);
    wait_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID0);
    wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    copy_ubuf_to_cbuf(((__cbuf__ half *)tensor_a_l1_5 + 0), ((__ubuf__ half *)tensor_a_ub_fract_12 + 0), 0, 1, 256, 0, 0);
    set_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID0);
    wait_flag(PIPE_V, PIPE_MTE2, EVENT_ID3);
    copy_gm_to_ubuf(((__ubuf__ half *)tensor_b_ub_14 + 0), ((__gm__ half *)tensor_b + ((kb_outer_db * 128) + 64)), 0, 256, 4, 46, 0);
    set_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    for (int32_t iter_cut_axis_13 = 0; iter_cut_axis_13 < 4; ++iter_cut_axis_13) {
      vmax(((__ubuf__ half *)tensor_b_ub_fract_7 + (iter_cut_axis_13 * 4096)), ((__ubuf__ half *)tensor_b_ub_14 + (iter_cut_axis_13 * 16)), ((__ubuf__ half *)tensor_b_ub_14 + (iter_cut_axis_13 * 16)), (uint8_t)32, (uint8_t)1, (uint8_t)4, (uint8_t)4, (uint8_t)8, (uint8_t)32, (uint8_t)32);
    }
    set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    set_flag(PIPE_V, PIPE_MTE2, EVENT_ID3);
    wait_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID1);
    wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    copy_ubuf_to_cbuf(((__cbuf__ half *)tensor_b_l1_8 + 0), ((__ubuf__ half *)tensor_b_ub_fract_7 + 0), 0, 1, 1024, 0, 0);
    set_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID1);
    set_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_M, PIPE_MTE1, EVENT_ID1);
    wait_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID0);
    load_cbuf_to_ca(((__ca__ half *)tensor_a_l0a_17 + 0), ((__cbuf__ half *)tensor_a_l1_5 + 0), 0, 16, 1, 0, 0);
    set_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID0);
    wait_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID1);
    load_cbuf_to_cb(((__cb__ half *)tensor_b_l0b_18 + 0), ((__cbuf__ half *)tensor_b_l1_8 + 0), 0, 64, 1, 0, 0);
    set_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
    set_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID1);
    wait_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
    mad(((__cc__ float *)tensor_bias_l0c_1 + 0), ((__ca__ half *)tensor_a_l0a_17 + 0), ((__cb__ half *)tensor_b_l0b_18 + 0), 64, 64, 256, (int8_t)0);
    set_flag(PIPE_M, PIPE_MTE1, EVENT_ID1);
  }
  copy_gm_to_ubuf(((__ubuf__ half *)tensor_a_ub + 0), ((__gm__ half *)tensor_a + 768), 0, 64, 2, 48, 0);
  set_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
  wait_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
  for (int32_t iter_lower_outer_02 = 0; iter_lower_outer_02 < 4; ++iter_lower_outer_02) {
    for (int32_t iter_cut_axis_14 = 0; iter_cut_axis_14 < 2; ++iter_cut_axis_14) {
      vmax(((__ubuf__ half *)tensor_a_ub_fract + ((iter_lower_outer_02 * 512) + (iter_cut_axis_14 * 128))), ((__ubuf__ half *)tensor_a_ub + ((iter_lower_outer_02 * 512) + (iter_cut_axis_14 * 256))), ((__ubuf__ half *)tensor_a_ub + ((iter_lower_outer_02 * 512) + (iter_cut_axis_14 * 256))), (uint8_t)2, (uint8_t)1, (uint8_t)2, (uint8_t)2, (uint8_t)16, (uint8_t)1, (uint8_t)1);
    }
  }
  set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
  wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
  wait_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID1);
  wait_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID0);
  copy_ubuf_to_cbuf(((__cbuf__ half *)tensor_a_l1 + 0), ((__ubuf__ half *)tensor_a_ub_fract + 0), 0, 1, 128, 0, 0);
  set_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID0);
  set_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID0);
  copy_gm_to_ubuf(((__ubuf__ half *)tensor_b_ub + 0), ((__gm__ half *)tensor_b + 768), 0, 256, 2, 48, 0);
  set_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
  wait_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
  wait_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
  for (int32_t iter_cut_axis_15 = 0; iter_cut_axis_15 < 2; ++iter_cut_axis_15) {
    vmax(((__ubuf__ half *)tensor_b_ub_fract + (iter_cut_axis_15 * 4096)), ((__ubuf__ half *)tensor_b_ub + (iter_cut_axis_15 * 16)), ((__ubuf__ half *)tensor_b_ub + (iter_cut_axis_15 * 16)), (uint8_t)32, (uint8_t)1, (uint8_t)2, (uint8_t)2, (uint8_t)8, (uint8_t)16, (uint8_t)16);
  }
  set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
  set_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
  wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
  copy_ubuf_to_cbuf(((__cbuf__ half *)tensor_b_l1 + 0), ((__ubuf__ half *)tensor_b_ub_fract + 0), 0, 1, 512, 0, 0);
  set_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID1);
  wait_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID0);
  wait_flag(PIPE_M, PIPE_MTE1, EVENT_ID1);
  wait_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
  load_cbuf_to_ca(((__ca__ half *)tensor_a_l0a + 0), ((__cbuf__ half *)tensor_a_l1 + 0), 0, 8, 1, 0, 0);
  set_flag(PIPE_M, PIPE_MTE1, EVENT_ID1);
  wait_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID1);
  load_cbuf_to_cb(((__cb__ half *)tensor_b_l0b + 0), ((__cbuf__ half *)tensor_b_l1 + 0), 0, 32, 1, 0, 0);
  set_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
  set_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID1);
  wait_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
  mad(((__cc__ float *)tensor_bias_l0c_1 + 0), ((__ca__ half *)tensor_a_l0a + 0), ((__cb__ half *)tensor_b_l0b + 0), 64, 32, 256, (int8_t)0);
  set_flag(PIPE_M, PIPE_V, EVENT_ID0);
  set_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
    wait_flag(PIPE_M, PIPE_V, EVENT_ID0);
  copy_matrix_cc_to_ubuf(((__ubuf__ half *)tensor_c_ub + 0), ((__cc__ float *)tensor_bias_l0c_1 + 0), 0, 1, 64, 0, 0, CRMODE_F32toF16_NONE);
  wait_flag(PIPE_V, PIPE_MTE2, EVENT_ID3);
  pipe_barrier(PIPE_V);
  for (int32_t iter_lower_outer_03 = 0; iter_lower_outer_03 < 4; ++iter_lower_outer_03) {
    for (int32_t iter_cut_axis_16 = 0; iter_cut_axis_16 < 2; ++iter_cut_axis_16) {
      vmax(((__ubuf__ half *)tensor_c_ub_fract_2 + ((iter_lower_outer_03 * 4096) + (iter_cut_axis_16 * 2048))), ((__ubuf__ half *)tensor_c_ub + ((iter_lower_outer_03 * 256) + (iter_cut_axis_16 * 128))), ((__ubuf__ half *)tensor_c_ub + ((iter_lower_outer_03 * 256) + (iter_cut_axis_16 * 128))), (uint8_t)16, (uint8_t)16, (uint8_t)1, (uint8_t)1, (uint8_t)1, (uint8_t)64, (uint8_t)64);
    }
  }
  set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
  set_flag(PIPE_V, PIPE_MTE2, EVENT_ID3);
  wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
  copy_ubuf_to_gm(((__gm__ half *)tensor_c_gm + 0), ((__ubuf__ half *)tensor_c_ub_fract_2 + 0), 0, 64, 16, 0, 16);
  copy_gm_to_ubuf(((__ubuf__ half *)tensor_bias_ub1 + 0), ((__gm__ half *)tensor_blas + 256), 0, 1, 16, 0, 0);
  set_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
  wait_flag(PIPE_V, PIPE_MTE2, EVENT_ID0);
  wait_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
  for (int32_t brc_part1 = 0; brc_part1 < 4; ++brc_part1) {
    broadcast_ub_to_cc(((__cc__ float *)tensor_bias_l0c_1 + (brc_part1 * 256)), ((__ubuf__ half *)tensor_bias_ub1 + 0), 16, 1, 0, 3);
  }
  set_flag(PIPE_V, PIPE_MTE2, EVENT_ID0);
  for (int32_t kb_outer_db1 = 0; kb_outer_db1 < 6; ++kb_outer_db1) {
    wait_flag(PIPE_V, PIPE_MTE2, EVENT_ID0);
    copy_gm_to_ubuf(((__ubuf__ half *)tensor_a_ub_21 + 0), ((__gm__ half *)tensor_a + (kb_outer_db1 * 128)), 0, 64, 4, 46, 0);
    set_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    for (int32_t iter_lower_outer_04 = 0; iter_lower_outer_04 < 4; ++iter_lower_outer_04) {
      for (int32_t iter_cut_axis_17 = 0; iter_cut_axis_17 < 2; ++iter_cut_axis_17) {
        vmax(((__ubuf__ half *)tensor_a_ub_fract_22 + ((iter_lower_outer_04 * 1024) + (iter_cut_axis_17 * 128))), ((__ubuf__ half *)tensor_a_ub_21 + ((iter_lower_outer_04 * 1024) + (iter_cut_axis_17 * 512))), ((__ubuf__ half *)tensor_a_ub_21 + ((iter_lower_outer_04 * 1024) + (iter_cut_axis_17 * 512))), (uint8_t)4, (uint8_t)1, (uint8_t)4, (uint8_t)4, (uint8_t)16, (uint8_t)1, (uint8_t)1);
      }
    }
    set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    set_flag(PIPE_V, PIPE_MTE2, EVENT_ID0);
    wait_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID0);
    wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    copy_ubuf_to_cbuf(((__cbuf__ half *)tensor_a_l1_5 + 0), ((__ubuf__ half *)tensor_a_ub_fract_22 + 0), 0, 1, 256, 0, 0);
    set_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID0);
    wait_flag(PIPE_V, PIPE_MTE2, EVENT_ID1);
    copy_gm_to_ubuf(((__ubuf__ half *)tensor_b_ub_24 + 0), ((__gm__ half *)tensor_b + ((kb_outer_db1 * 128) + 204800)), 0, 256, 4, 46, 0);
    set_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    for (int32_t iter_cut_axis_18 = 0; iter_cut_axis_18 < 4; ++iter_cut_axis_18) {
      vmax(((__ubuf__ half *)tensor_b_ub_fract_25 + (iter_cut_axis_18 * 4096)), ((__ubuf__ half *)tensor_b_ub_24 + (iter_cut_axis_18 * 16)), ((__ubuf__ half *)tensor_b_ub_24 + (iter_cut_axis_18 * 16)), (uint8_t)32, (uint8_t)1, (uint8_t)4, (uint8_t)4, (uint8_t)8, (uint8_t)32, (uint8_t)32);
    }
    set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    set_flag(PIPE_V, PIPE_MTE2, EVENT_ID1);
    wait_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID1);
    wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    copy_ubuf_to_cbuf(((__cbuf__ half *)tensor_b_l1_8 + 0), ((__ubuf__ half *)tensor_b_ub_fract_25 + 0), 0, 1, 1024, 0, 0);
    set_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID1);
    set_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
    wait_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID0);
    load_cbuf_to_ca(((__ca__ half *)tensor_a_l0a_9 + 0), ((__cbuf__ half *)tensor_a_l1_5 + 0), 0, 16, 1, 0, 0);
    set_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID0);
    wait_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID1);
    load_cbuf_to_cb(((__cb__ half *)tensor_b_l0b_10 + 0), ((__cbuf__ half *)tensor_b_l1_8 + 0), 0, 64, 1, 0, 0);
    set_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
    set_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID1);
    wait_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
    mad(((__cc__ float *)tensor_bias_l0c_1 + 0), ((__ca__ half *)tensor_a_l0a_9 + 0), ((__cb__ half *)tensor_b_l0b_10 + 0), 64, 64, 256, (int8_t)0);
    set_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
    wait_flag(PIPE_V, PIPE_MTE2, EVENT_ID2);
    copy_gm_to_ubuf(((__ubuf__ half *)tensor_a_ub_29 + 0), ((__gm__ half *)tensor_a + ((kb_outer_db1 * 128) + 64)), 0, 64, 4, 46, 0);
    set_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    for (int32_t iter_lower_outer_05 = 0; iter_lower_outer_05 < 4; ++iter_lower_outer_05) {
      for (int32_t iter_cut_axis_19 = 0; iter_cut_axis_19 < 2; ++iter_cut_axis_19) {
        vmax(((__ubuf__ half *)tensor_a_ub_fract_30 + ((iter_lower_outer_05 * 1024) + (iter_cut_axis_19 * 128))), ((__ubuf__ half *)tensor_a_ub_29 + ((iter_lower_outer_05 * 1024) + (iter_cut_axis_19 * 512))), ((__ubuf__ half *)tensor_a_ub_29 + ((iter_lower_outer_05 * 1024) + (iter_cut_axis_19 * 512))), (uint8_t)4, (uint8_t)1, (uint8_t)4, (uint8_t)4, (uint8_t)16, (uint8_t)1, (uint8_t)1);
      }
    }
    set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    set_flag(PIPE_V, PIPE_MTE2, EVENT_ID2);
    wait_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID0);
    wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    copy_ubuf_to_cbuf(((__cbuf__ half *)tensor_a_l1_5 + 0), ((__ubuf__ half *)tensor_a_ub_fract_30 + 0), 0, 1, 256, 0, 0);
    set_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID0);
    wait_flag(PIPE_V, PIPE_MTE2, EVENT_ID3);
    copy_gm_to_ubuf(((__ubuf__ half *)tensor_c_ub + 0), ((__gm__ half *)tensor_b + ((kb_outer_db1 * 128) + 204864)), 0, 256, 4, 46, 0);
    set_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    for (int32_t iter_cut_axis_110 = 0; iter_cut_axis_110 < 4; ++iter_cut_axis_110) {
      vmax(((__ubuf__ half *)tensor_b_ub_fract_25 + (iter_cut_axis_110 * 4096)), ((__ubuf__ half *)tensor_c_ub + (iter_cut_axis_110 * 16)), ((__ubuf__ half *)tensor_c_ub + (iter_cut_axis_110 * 16)), (uint8_t)32, (uint8_t)1, (uint8_t)4, (uint8_t)4, (uint8_t)8, (uint8_t)32, (uint8_t)32);
    }
    set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    set_flag(PIPE_V, PIPE_MTE2, EVENT_ID3);
    wait_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID1);
    wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    copy_ubuf_to_cbuf(((__cbuf__ half *)tensor_b_l1_8 + 0), ((__ubuf__ half *)tensor_b_ub_fract_25 + 0), 0, 1, 1024, 0, 0);
    set_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID1);
    set_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_M, PIPE_MTE1, EVENT_ID1);
    wait_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID0);
    load_cbuf_to_ca(((__ca__ half *)tensor_a_l0a_17 + 0), ((__cbuf__ half *)tensor_a_l1_5 + 0), 0, 16, 1, 0, 0);
    set_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID0);
    wait_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID1);
    load_cbuf_to_cb(((__cb__ half *)tensor_b_l0b_18 + 0), ((__cbuf__ half *)tensor_b_l1_8 + 0), 0, 64, 1, 0, 0);
    set_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
    set_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID1);
    wait_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
    mad(((__cc__ float *)tensor_bias_l0c_1 + 0), ((__ca__ half *)tensor_a_l0a_17 + 0), ((__cb__ half *)tensor_b_l0b_18 + 0), 64, 64, 256, (int8_t)0);
    set_flag(PIPE_M, PIPE_MTE1, EVENT_ID1);
  }
  copy_gm_to_ubuf(((__ubuf__ half *)tensor_a_ub1 + 0), ((__gm__ half *)tensor_a + 768), 0, 64, 2, 48, 0);
  set_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
  wait_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
  wait_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
  for (int32_t iter_lower_outer_06 = 0; iter_lower_outer_06 < 4; ++iter_lower_outer_06) {
    for (int32_t iter_cut_axis_111 = 0; iter_cut_axis_111 < 2; ++iter_cut_axis_111) {
      vmax(((__ubuf__ half *)tensor_a_ub_fract1 + ((iter_lower_outer_06 * 512) + (iter_cut_axis_111 * 128))), ((__ubuf__ half *)tensor_a_ub1 + ((iter_lower_outer_06 * 512) + (iter_cut_axis_111 * 256))), ((__ubuf__ half *)tensor_a_ub1 + ((iter_lower_outer_06 * 512) + (iter_cut_axis_111 * 256))), (uint8_t)2, (uint8_t)1, (uint8_t)2, (uint8_t)2, (uint8_t)16, (uint8_t)1, (uint8_t)1);
    }
  }
  set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
  wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
  wait_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID1);
  wait_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID0);
  copy_ubuf_to_cbuf(((__cbuf__ half *)tensor_a_l1 + 0), ((__ubuf__ half *)tensor_a_ub_fract1 + 0), 0, 1, 128, 0, 0);
  set_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID0);
  wait_flag(PIPE_V, PIPE_MTE2, EVENT_ID3);
  wait_flag(PIPE_V, PIPE_MTE2, EVENT_ID2);
  wait_flag(PIPE_V, PIPE_MTE2, EVENT_ID1);
  wait_flag(PIPE_V, PIPE_MTE2, EVENT_ID0);
  copy_gm_to_ubuf(((__ubuf__ half *)tensor_b_ub1 + 0), ((__gm__ half *)tensor_b + 205568), 0, 256, 2, 48, 0);
  set_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
  wait_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
  for (int32_t iter_cut_axis_112 = 0; iter_cut_axis_112 < 2; ++iter_cut_axis_112) {
    vmax(((__ubuf__ half *)tensor_b_ub_fract1 + (iter_cut_axis_112 * 4096)), ((__ubuf__ half *)tensor_b_ub1 + (iter_cut_axis_112 * 16)), ((__ubuf__ half *)tensor_b_ub1 + (iter_cut_axis_112 * 16)), (uint8_t)32, (uint8_t)1, (uint8_t)2, (uint8_t)2, (uint8_t)8, (uint8_t)16, (uint8_t)16);
  }
  set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
  wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
  copy_ubuf_to_cbuf(((__cbuf__ half *)tensor_b_l1 + 0), ((__ubuf__ half *)tensor_b_ub_fract1 + 0), 0, 1, 512, 0, 0);
  set_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID1);
  wait_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID0);
  wait_flag(PIPE_M, PIPE_MTE1, EVENT_ID1);
  wait_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
  load_cbuf_to_ca(((__ca__ half *)tensor_a_l0a + 0), ((__cbuf__ half *)tensor_a_l1 + 0), 0, 8, 1, 0, 0);
  wait_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID1);
  load_cbuf_to_cb(((__cb__ half *)tensor_b_l0b + 0), ((__cbuf__ half *)tensor_b_l1 + 0), 0, 32, 1, 0, 0);
  set_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
  wait_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
  mad(((__cc__ float *)tensor_bias_l0c_1 + 0), ((__ca__ half *)tensor_a_l0a + 0), ((__cb__ half *)tensor_b_l0b + 0), 64, 32, 256, (int8_t)0);
  set_flag(PIPE_M, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_M, PIPE_V, EVENT_ID0);
  copy_matrix_cc_to_ubuf(((__ubuf__ half *)tensor_c_ub1 + 0), ((__cc__ float *)tensor_bias_l0c_1 + 0), 0, 1, 64, 0, 0, CRMODE_F32toF16_NONE);
  pipe_barrier(PIPE_V);
  for (int32_t iter_lower_outer_07 = 0; iter_lower_outer_07 < 4; ++iter_lower_outer_07) {
    for (int32_t iter_cut_axis_113 = 0; iter_cut_axis_113 < 2; ++iter_cut_axis_113) {
      vmax(((__ubuf__ half *)tensor_c_ub_fract_20 + ((iter_lower_outer_07 * 4096) + (iter_cut_axis_113 * 2048))), ((__ubuf__ half *)tensor_c_ub1 + ((iter_lower_outer_07 * 256) + (iter_cut_axis_113 * 128))), ((__ubuf__ half *)tensor_c_ub1 + ((iter_lower_outer_07 * 256) + (iter_cut_axis_113 * 128))), (uint8_t)16, (uint8_t)16, (uint8_t)1, (uint8_t)1, (uint8_t)1, (uint8_t)64, (uint8_t)64);
    }
  }
  set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
  wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
  copy_ubuf_to_gm(((__gm__ half *)tensor_c_gm + 256), ((__ubuf__ half *)tensor_c_ub_fract_20 + 0), 0, 64, 16, 0, 16);
  pipe_barrier(PIPE_ALL);
}

