#ifdef __CCE_KT_TEST__
#define __aicore__ 
#else
#define __aicore__ [aicore]
#endif


#define VERIFY_L2Buffer_OK(l2DataIndex) \
	(0x01 & (((0xFF)&(~l2_in_main)) >> (l2DataIndex)))

extern "C"  __global__ __aicore__ void matmul_op_64_512_800_NTA_NTB_nobias__kernel0(__gm__ half* __restrict__ tensor_a, __gm__ half* __restrict__ tensor_b, __gm__ half* __restrict__ tensor_c_gm,int64_t index0, uint64_t offset0, int64_t index1, uint64_t offset1, int64_t index2, uint64_t offset2) {
  if (index0 >= 0) {
    if (VERIFY_L2Buffer_OK(index0)) {
      tensor_a = (__gm__ half*)((uint64_t)l2_vaddr_base + offset0);
    }
  }
  if (index1 >= 0) {
    if (VERIFY_L2Buffer_OK(index1)) {
      tensor_b = (__gm__ half*)((uint64_t)l2_vaddr_base + offset1);
    }
  }
  if (index2 >= 0) {
    if (VERIFY_L2Buffer_OK(index2)) {
      tensor_c_gm = (__gm__ half*)((uint64_t)l2_vaddr_base + offset2);
    }
  }
set_vector_mask((uint64_t)-1, (uint64_t)-1);
__cc__   float* tensor_c = (__cc__  float *)get_imm(0);
__ubuf__   half* tensor_a_ub_1 = (__ubuf__  half *)get_imm(0);
__ubuf__   half* tensor_a_ub_fract_2 = (__ubuf__  half *)get_imm(4096);
__cbuf__   half* tensor_a_l1_3 = (__cbuf__  half *)get_imm(0);
__ubuf__   half* tensor_b_ub_4 = (__ubuf__  half *)get_imm(8192);
__ubuf__   half* tensor_b_ub_fract_5 = (__ubuf__  half *)get_imm(39936);
__cbuf__   half* tensor_b_l1_6 = (__cbuf__  half *)get_imm(4096);
__ca__   half* tensor_a_l0a_7 = (__ca__  half *)get_imm(0);
__cb__   half* tensor_b_l0b_8 = (__cb__  half *)get_imm(0);
__ubuf__   half* tensor_a_ub_9 = (__ubuf__  half *)get_imm(71680);
__ubuf__   half* tensor_b_ub_12 = (__ubuf__  half *)get_imm(75776);
__ca__   half* tensor_a_l0a_15 = (__ca__  half *)get_imm(4096);
__cb__   half* tensor_b_l0b_16 = (__cb__  half *)get_imm(31744);
__ubuf__   half* tensor_c_ub = (__ubuf__  half *)get_imm(0);
__ubuf__   half* tensor_c_ub_fract = (__ubuf__  half *)get_imm(63488);
__cc__   float* tensor_c1 = (__cc__  float *)get_imm(0);
__ubuf__   half* tensor_a_ub_17 = (__ubuf__  half *)get_imm(126976);
__ubuf__   half* tensor_a_ub_fract_18 = (__ubuf__  half *)get_imm(131072);
__ubuf__   half* tensor_b_ub_20 = (__ubuf__  half *)get_imm(135168);
__ubuf__   half* tensor_b_ub_fract_21 = (__ubuf__  half *)get_imm(0);
__cbuf__   half* tensor_b_l1_22 = (__cbuf__  half *)get_imm(4096);
__cb__   half* tensor_b_l0b_24 = (__cb__  half *)get_imm(0);
__ubuf__   half* tensor_a_ub_25 = (__ubuf__  half *)get_imm(154624);
__ubuf__   half* tensor_a_ub_fract_26 = (__ubuf__  half *)get_imm(19456);
__ubuf__   half* tensor_b_ub_28 = (__ubuf__  half *)get_imm(158720);
__cb__   half* tensor_b_l0b_32 = (__cb__  half *)get_imm(19456);
__ubuf__   half* tensor_c_ub1 = (__ubuf__  half *)get_imm(0);
__ubuf__   half* tensor_c_ub_fract1 = (__ubuf__  half *)get_imm(38912);
  set_flag(PIPE_M, PIPE_MTE1, EVENT_ID1);
  set_flag(PIPE_V, PIPE_MTE2, EVENT_ID3);
  set_flag(PIPE_V, PIPE_MTE2, EVENT_ID2);
  set_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
  set_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID1);
  set_flag(PIPE_MTE3, PIPE_V, EVENT_ID1);
  set_flag(PIPE_V, PIPE_MTE2, EVENT_ID1);
  set_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID0);
  set_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
  set_flag(PIPE_V, PIPE_MTE2, EVENT_ID0);
  set_vector_mask((uint64_t)18446744073709551615, (uint64_t)18446744073709551615);
  for (int32_t kb_outer_db = 0; kb_outer_db < 8; ++kb_outer_db) {
    wait_flag(PIPE_V, PIPE_MTE2, EVENT_ID0);
    copy_gm_to_ubuf(((__ubuf__ half *)tensor_a_ub_1 + 0), ((__gm__ half *)tensor_a + (kb_outer_db * 64)), 0, 64, 2, 30, 0);
    set_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    for (int32_t iter_lower_outer_0 = 0; iter_lower_outer_0 < 4; ++iter_lower_outer_0) {
      for (int32_t iter_cut_axis_1 = 0; iter_cut_axis_1 < 2; ++iter_cut_axis_1) {
        vmax(((__ubuf__ half *)tensor_a_ub_fract_2 + ((iter_lower_outer_0 * 512) + (iter_cut_axis_1 * 128))), ((__ubuf__ half *)tensor_a_ub_1 + ((iter_lower_outer_0 * 512) + (iter_cut_axis_1 * 256))), ((__ubuf__ half *)tensor_a_ub_1 + ((iter_lower_outer_0 * 512) + (iter_cut_axis_1 * 256))), (uint8_t)2, (uint8_t)1, (uint8_t)2, (uint8_t)2, (uint8_t)16, (uint8_t)1, (uint8_t)1);
      }
    }
    set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    set_flag(PIPE_V, PIPE_MTE2, EVENT_ID0);
    wait_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID0);
    wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    copy_ubuf_to_cbuf(((__cbuf__ half *)tensor_a_l1_3 + 0), ((__ubuf__ half *)tensor_a_ub_fract_2 + 0), 0, 1, 128, 0, 0);
    set_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID0);
    set_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_V, PIPE_MTE2, EVENT_ID1);
    copy_gm_to_ubuf(((__ubuf__ half *)tensor_b_ub_4 + 0), ((__gm__ half *)tensor_b + (kb_outer_db * 51200)), 0, 32, 31, 19, 0);
    set_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_MTE3, PIPE_V, EVENT_ID1);
    wait_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    for (int32_t iter_lower_outer_01 = 0; iter_lower_outer_01 < 2; ++iter_lower_outer_01) {
      for (int32_t iter_cut_axis_11 = 0; iter_cut_axis_11 < 2; ++iter_cut_axis_11) {
        vmax(((__ubuf__ half *)tensor_b_ub_fract_5 + ((iter_lower_outer_01 * 7936) + (iter_cut_axis_11 * 128))), ((__ubuf__ half *)tensor_b_ub_4 + ((iter_lower_outer_01 * 7936) + (iter_cut_axis_11 * 3968))), ((__ubuf__ half *)tensor_b_ub_4 + ((iter_lower_outer_01 * 7936) + (iter_cut_axis_11 * 3968))), (uint8_t)31, (uint8_t)1, (uint8_t)31, (uint8_t)31, (uint8_t)16, (uint8_t)1, (uint8_t)1);
      }
    }
    set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    set_flag(PIPE_V, PIPE_MTE2, EVENT_ID1);
    wait_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID1);
    wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    copy_ubuf_to_cbuf(((__cbuf__ half *)tensor_b_l1_6 + 0), ((__ubuf__ half *)tensor_b_ub_fract_5 + 0), 0, 1, 992, 0, 0);
    set_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID1);
    set_flag(PIPE_MTE3, PIPE_V, EVENT_ID1);
    wait_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
    wait_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID0);
    load_cbuf_to_ca(((__ca__ half *)tensor_a_l0a_7 + 0), ((__cbuf__ half *)tensor_a_l1_3 + 0), 0, 8, 1, 0, 0);
    set_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID0);
    wait_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID1);
    load_cbuf_to_cb(((__cb__ half *)tensor_b_l0b_8 + 0), ((__cbuf__ half *)tensor_b_l1_6 + 0), 0, 62, 1, 0, 1);
    set_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
    set_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID1);
    wait_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
    mad(((__cc__ float *)tensor_c + 0), ((__ca__ half *)tensor_a_l0a_7 + 0), ((__cb__ half *)tensor_b_l0b_8 + 0), 64, 32, 496, (kb_outer_db == 0));
    set_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
    wait_flag(PIPE_V, PIPE_MTE2, EVENT_ID2);
    copy_gm_to_ubuf(((__ubuf__ half *)tensor_a_ub_9 + 0), ((__gm__ half *)tensor_a + ((kb_outer_db * 64) + 32)), 0, 64, 2, 30, 0);
    set_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    for (int32_t iter_lower_outer_02 = 0; iter_lower_outer_02 < 4; ++iter_lower_outer_02) {
      for (int32_t iter_cut_axis_12 = 0; iter_cut_axis_12 < 2; ++iter_cut_axis_12) {
        vmax(((__ubuf__ half *)tensor_a_ub_fract_2 + ((iter_lower_outer_02 * 512) + (iter_cut_axis_12 * 128))), ((__ubuf__ half *)tensor_a_ub_9 + ((iter_lower_outer_02 * 512) + (iter_cut_axis_12 * 256))), ((__ubuf__ half *)tensor_a_ub_9 + ((iter_lower_outer_02 * 512) + (iter_cut_axis_12 * 256))), (uint8_t)2, (uint8_t)1, (uint8_t)2, (uint8_t)2, (uint8_t)16, (uint8_t)1, (uint8_t)1);
      }
    }
    set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    set_flag(PIPE_V, PIPE_MTE2, EVENT_ID2);
    wait_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID0);
    wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    copy_ubuf_to_cbuf(((__cbuf__ half *)tensor_a_l1_3 + 0), ((__ubuf__ half *)tensor_a_ub_fract_2 + 0), 0, 1, 128, 0, 0);
    set_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID0);
    set_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_V, PIPE_MTE2, EVENT_ID3);
    copy_gm_to_ubuf(((__ubuf__ half *)tensor_b_ub_12 + 0), ((__gm__ half *)tensor_b + ((kb_outer_db * 51200) + 25600)), 0, 32, 31, 19, 0);
    set_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_MTE3, PIPE_V, EVENT_ID1);
    wait_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    for (int32_t iter_lower_outer_03 = 0; iter_lower_outer_03 < 2; ++iter_lower_outer_03) {
      for (int32_t iter_cut_axis_13 = 0; iter_cut_axis_13 < 2; ++iter_cut_axis_13) {
        vmax(((__ubuf__ half *)tensor_b_ub_fract_5 + ((iter_lower_outer_03 * 7936) + (iter_cut_axis_13 * 128))), ((__ubuf__ half *)tensor_b_ub_12 + ((iter_lower_outer_03 * 7936) + (iter_cut_axis_13 * 3968))), ((__ubuf__ half *)tensor_b_ub_12 + ((iter_lower_outer_03 * 7936) + (iter_cut_axis_13 * 3968))), (uint8_t)31, (uint8_t)1, (uint8_t)31, (uint8_t)31, (uint8_t)16, (uint8_t)1, (uint8_t)1);
      }
    }
    set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    set_flag(PIPE_V, PIPE_MTE2, EVENT_ID3);
    wait_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID1);
    wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    copy_ubuf_to_cbuf(((__cbuf__ half *)tensor_b_l1_6 + 0), ((__ubuf__ half *)tensor_b_ub_fract_5 + 0), 0, 1, 992, 0, 0);
    set_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID1);
    set_flag(PIPE_MTE3, PIPE_V, EVENT_ID1);
    wait_flag(PIPE_M, PIPE_MTE1, EVENT_ID1);
    wait_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID0);
    load_cbuf_to_ca(((__ca__ half *)tensor_a_l0a_15 + 0), ((__cbuf__ half *)tensor_a_l1_3 + 0), 0, 8, 1, 0, 0);
    set_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID0);
    wait_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID1);
    load_cbuf_to_cb(((__cb__ half *)tensor_b_l0b_16 + 0), ((__cbuf__ half *)tensor_b_l1_6 + 0), 0, 62, 1, 0, 1);
    set_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
    set_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID1);
    wait_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
    mad(((__cc__ float *)tensor_c + 0), ((__ca__ half *)tensor_a_l0a_15 + 0), ((__cb__ half *)tensor_b_l0b_16 + 0), 64, 32, 496, (int8_t)0);
    set_flag(PIPE_M, PIPE_MTE1, EVENT_ID1);
  }
  set_flag(PIPE_M, PIPE_V, EVENT_ID0);
  wait_flag(PIPE_MTE3, PIPE_V, EVENT_ID1);
  wait_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
  wait_flag(PIPE_M, PIPE_V, EVENT_ID0);
  copy_matrix_cc_to_ubuf(((__ubuf__ half *)tensor_c_ub + 0), ((__cc__ float *)tensor_c + 0), 0, 1, 124, 0, 0, CRMODE_F32toF16_NONE);
  set_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
  pipe_barrier(PIPE_V);
  for (int32_t iter_lower_outer_04 = 0; iter_lower_outer_04 < 4; ++iter_lower_outer_04) {
    for (int32_t iter_cut_axis_14 = 0; iter_cut_axis_14 < 2; ++iter_cut_axis_14) {
      vmax(((__ubuf__ half *)tensor_c_ub_fract + ((iter_lower_outer_04 * 7936) + (iter_cut_axis_14 * 3968))), ((__ubuf__ half *)tensor_c_ub + ((iter_lower_outer_04 * 256) + (iter_cut_axis_14 * 128))), ((__ubuf__ half *)tensor_c_ub + ((iter_lower_outer_04 * 256) + (iter_cut_axis_14 * 128))), (uint8_t)31, (uint8_t)31, (uint8_t)1, (uint8_t)1, (uint8_t)1, (uint8_t)64, (uint8_t)64);
    }
  }
  set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
  wait_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID1);
  wait_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID0);
  wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
  copy_ubuf_to_gm(((__gm__ half *)tensor_c_gm + 0), ((__ubuf__ half *)tensor_c_ub_fract + 0), 0, 64, 31, 0, 19);
  set_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID0);
  set_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID1);
  pipe_barrier(PIPE_V);
  for (int32_t kb_outer_db1 = 0; kb_outer_db1 < 8; ++kb_outer_db1) {
    wait_flag(PIPE_V, PIPE_MTE2, EVENT_ID0);
    copy_gm_to_ubuf(((__ubuf__ half *)tensor_a_ub_17 + 0), ((__gm__ half *)tensor_a + (kb_outer_db1 * 64)), 0, 64, 2, 30, 0);
    set_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    for (int32_t iter_lower_outer_05 = 0; iter_lower_outer_05 < 4; ++iter_lower_outer_05) {
      for (int32_t iter_cut_axis_15 = 0; iter_cut_axis_15 < 2; ++iter_cut_axis_15) {
        vmax(((__ubuf__ half *)tensor_a_ub_fract_18 + ((iter_lower_outer_05 * 512) + (iter_cut_axis_15 * 128))), ((__ubuf__ half *)tensor_a_ub_17 + ((iter_lower_outer_05 * 512) + (iter_cut_axis_15 * 256))), ((__ubuf__ half *)tensor_a_ub_17 + ((iter_lower_outer_05 * 512) + (iter_cut_axis_15 * 256))), (uint8_t)2, (uint8_t)1, (uint8_t)2, (uint8_t)2, (uint8_t)16, (uint8_t)1, (uint8_t)1);
      }
    }
    set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    set_flag(PIPE_V, PIPE_MTE2, EVENT_ID0);
    wait_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID0);
    wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    copy_ubuf_to_cbuf(((__cbuf__ half *)tensor_a_l1_3 + 0), ((__ubuf__ half *)tensor_a_ub_fract_18 + 0), 0, 1, 128, 0, 0);
    set_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID0);
    wait_flag(PIPE_V, PIPE_MTE2, EVENT_ID1);
    copy_gm_to_ubuf(((__ubuf__ half *)tensor_b_ub_20 + 0), ((__gm__ half *)tensor_b + ((kb_outer_db1 * 51200) + 496)), 0, 32, 19, 31, 0);
    set_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    for (int32_t iter_lower_outer_06 = 0; iter_lower_outer_06 < 2; ++iter_lower_outer_06) {
      for (int32_t iter_cut_axis_16 = 0; iter_cut_axis_16 < 2; ++iter_cut_axis_16) {
        vmax(((__ubuf__ half *)tensor_b_ub_fract_21 + ((iter_lower_outer_06 * 4864) + (iter_cut_axis_16 * 128))), ((__ubuf__ half *)tensor_b_ub_20 + ((iter_lower_outer_06 * 4864) + (iter_cut_axis_16 * 2432))), ((__ubuf__ half *)tensor_b_ub_20 + ((iter_lower_outer_06 * 4864) + (iter_cut_axis_16 * 2432))), (uint8_t)19, (uint8_t)1, (uint8_t)19, (uint8_t)19, (uint8_t)16, (uint8_t)1, (uint8_t)1);
      }
    }
    set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    set_flag(PIPE_V, PIPE_MTE2, EVENT_ID1);
    wait_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID1);
    wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    copy_ubuf_to_cbuf(((__cbuf__ half *)tensor_b_l1_22 + 0), ((__ubuf__ half *)tensor_b_ub_fract_21 + 0), 0, 1, 608, 0, 0);
    set_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID1);
    set_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
    wait_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID0);
    load_cbuf_to_ca(((__ca__ half *)tensor_a_l0a_7 + 0), ((__cbuf__ half *)tensor_a_l1_3 + 0), 0, 8, 1, 0, 0);
    set_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID0);
    wait_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID1);
    load_cbuf_to_cb(((__cb__ half *)tensor_b_l0b_24 + 0), ((__cbuf__ half *)tensor_b_l1_22 + 0), 0, 38, 1, 0, 1);
    set_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
    set_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID1);
    wait_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
    mad(((__cc__ float *)tensor_c1 + 0), ((__ca__ half *)tensor_a_l0a_7 + 0), ((__cb__ half *)tensor_b_l0b_24 + 0), 64, 32, 304, (kb_outer_db1 == 0));
    set_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
    wait_flag(PIPE_V, PIPE_MTE2, EVENT_ID2);
    copy_gm_to_ubuf(((__ubuf__ half *)tensor_a_ub_25 + 0), ((__gm__ half *)tensor_a + ((kb_outer_db1 * 64) + 32)), 0, 64, 2, 30, 0);
    set_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    for (int32_t iter_lower_outer_07 = 0; iter_lower_outer_07 < 4; ++iter_lower_outer_07) {
      for (int32_t iter_cut_axis_17 = 0; iter_cut_axis_17 < 2; ++iter_cut_axis_17) {
        vmax(((__ubuf__ half *)tensor_a_ub_fract_26 + ((iter_lower_outer_07 * 512) + (iter_cut_axis_17 * 128))), ((__ubuf__ half *)tensor_a_ub_25 + ((iter_lower_outer_07 * 512) + (iter_cut_axis_17 * 256))), ((__ubuf__ half *)tensor_a_ub_25 + ((iter_lower_outer_07 * 512) + (iter_cut_axis_17 * 256))), (uint8_t)2, (uint8_t)1, (uint8_t)2, (uint8_t)2, (uint8_t)16, (uint8_t)1, (uint8_t)1);
      }
    }
    set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    set_flag(PIPE_V, PIPE_MTE2, EVENT_ID2);
    wait_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID0);
    wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    copy_ubuf_to_cbuf(((__cbuf__ half *)tensor_a_l1_3 + 0), ((__ubuf__ half *)tensor_a_ub_fract_26 + 0), 0, 1, 128, 0, 0);
    set_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID0);
    wait_flag(PIPE_V, PIPE_MTE2, EVENT_ID3);
    copy_gm_to_ubuf(((__ubuf__ half *)tensor_b_ub_28 + 0), ((__gm__ half *)tensor_b + ((kb_outer_db1 * 51200) + 26096)), 0, 32, 19, 31, 0);
    set_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    for (int32_t iter_lower_outer_08 = 0; iter_lower_outer_08 < 2; ++iter_lower_outer_08) {
      for (int32_t iter_cut_axis_18 = 0; iter_cut_axis_18 < 2; ++iter_cut_axis_18) {
        vmax(((__ubuf__ half *)tensor_b_ub_fract_21 + ((iter_lower_outer_08 * 4864) + (iter_cut_axis_18 * 128))), ((__ubuf__ half *)tensor_b_ub_28 + ((iter_lower_outer_08 * 4864) + (iter_cut_axis_18 * 2432))), ((__ubuf__ half *)tensor_b_ub_28 + ((iter_lower_outer_08 * 4864) + (iter_cut_axis_18 * 2432))), (uint8_t)19, (uint8_t)1, (uint8_t)19, (uint8_t)19, (uint8_t)16, (uint8_t)1, (uint8_t)1);
      }
    }
    set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    set_flag(PIPE_V, PIPE_MTE2, EVENT_ID3);
    wait_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID1);
    wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    copy_ubuf_to_cbuf(((__cbuf__ half *)tensor_b_l1_22 + 0), ((__ubuf__ half *)tensor_b_ub_fract_21 + 0), 0, 1, 608, 0, 0);
    set_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID1);
    set_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_M, PIPE_MTE1, EVENT_ID1);
    wait_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID0);
    load_cbuf_to_ca(((__ca__ half *)tensor_a_l0a_15 + 0), ((__cbuf__ half *)tensor_a_l1_3 + 0), 0, 8, 1, 0, 0);
    set_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID0);
    wait_flag(PIPE_MTE3, PIPE_MTE1, EVENT_ID1);
    load_cbuf_to_cb(((__cb__ half *)tensor_b_l0b_32 + 0), ((__cbuf__ half *)tensor_b_l1_22 + 0), 0, 38, 1, 0, 1);
    set_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
    set_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID1);
    wait_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
    mad(((__cc__ float *)tensor_c1 + 0), ((__ca__ half *)tensor_a_l0a_15 + 0), ((__cb__ half *)tensor_b_l0b_32 + 0), 64, 32, 304, (int8_t)0);
    set_flag(PIPE_M, PIPE_MTE1, EVENT_ID1);
  }
  set_flag(PIPE_M, PIPE_V, EVENT_ID0);
  wait_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
  wait_flag(PIPE_M, PIPE_V, EVENT_ID0);
  copy_matrix_cc_to_ubuf(((__ubuf__ half *)tensor_c_ub1 + 0), ((__cc__ float *)tensor_c1 + 0), 0, 1, 76, 0, 0, CRMODE_F32toF16_NONE);
  pipe_barrier(PIPE_V);
  for (int32_t iter_lower_outer_09 = 0; iter_lower_outer_09 < 4; ++iter_lower_outer_09) {
    for (int32_t iter_cut_axis_19 = 0; iter_cut_axis_19 < 2; ++iter_cut_axis_19) {
      vmax(((__ubuf__ half *)tensor_c_ub_fract1 + ((iter_lower_outer_09 * 4864) + (iter_cut_axis_19 * 2432))), ((__ubuf__ half *)tensor_c_ub1 + ((iter_lower_outer_09 * 256) + (iter_cut_axis_19 * 128))), ((__ubuf__ half *)tensor_c_ub1 + ((iter_lower_outer_09 * 256) + (iter_cut_axis_19 * 128))), (uint8_t)19, (uint8_t)19, (uint8_t)1, (uint8_t)1, (uint8_t)1, (uint8_t)64, (uint8_t)64);
    }
  }
  set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
  wait_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID1);
  wait_flag(PIPE_MTE1, PIPE_MTE3, EVENT_ID0);
  wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
  copy_ubuf_to_gm(((__gm__ half *)tensor_c_gm + 496), ((__ubuf__ half *)tensor_c_ub_fract1 + 0), 0, 64, 19, 0, 31);
  wait_flag(PIPE_V, PIPE_MTE2, EVENT_ID0);
  wait_flag(PIPE_V, PIPE_MTE2, EVENT_ID1);
  wait_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
  wait_flag(PIPE_V, PIPE_MTE2, EVENT_ID2);
  wait_flag(PIPE_V, PIPE_MTE2, EVENT_ID3);
  wait_flag(PIPE_M, PIPE_MTE1, EVENT_ID1);
  pipe_barrier(PIPE_ALL);
}

