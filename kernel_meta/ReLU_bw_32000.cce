#ifdef __CCE_KT_TEST__
#define __aicore__ 
#else
#define __aicore__ [aicore]
#endif


#define VERIFY_L2Buffer_OK(l2DataIndex) \
	(0x01 & (((0xFF)&(~l2_in_main)) >> (l2DataIndex)))

extern "C"  __global__ __aicore__ void ReLU_bw_32000__kernel0(__gm__ half* __restrict__ data, __gm__ half* __restrict__ diff, __gm__ half* __restrict__ mul_2,int64_t index0, uint64_t offset0, int64_t index1, uint64_t offset1, int64_t index2, uint64_t offset2) {
  if (index0 >= 0) {
    if (VERIFY_L2Buffer_OK(index0)) {
      data = (__gm__ half*)((uint64_t)l2_vaddr_base + offset0);
    }
  }
  if (index1 >= 0) {
    if (VERIFY_L2Buffer_OK(index1)) {
      diff = (__gm__ half*)((uint64_t)l2_vaddr_base + offset1);
    }
  }
  if (index2 >= 0) {
    if (VERIFY_L2Buffer_OK(index2)) {
      mul_2 = (__gm__ half*)((uint64_t)l2_vaddr_base + offset2);
    }
  }
set_vector_mask((uint64_t)-1, (uint64_t)-1);
  if (((int32_t)block_idx) < 1) {
__ubuf__     half* data_local_UB = (__ubuf__  half *)get_imm(0);
__ubuf__     half* scalar1 = (__ubuf__  half *)get_imm(20992);
__ubuf__     half* scalar3 = (__ubuf__  half *)get_imm(21248);
__ubuf__     half* scalar4 = (__ubuf__  half *)get_imm(22016);
__ubuf__     half* cmpsel_1_local_UB = (__ubuf__  half *)get_imm(22784);
__ubuf__     half* diff_local_UB = (__ubuf__  half *)get_imm(44544);
__ubuf__     half* data_local_UB1 = (__ubuf__  half *)get_imm(65792);
__ubuf__     half* scalar11 = (__ubuf__  half *)get_imm(0);
__ubuf__     half* scalar31 = (__ubuf__  half *)get_imm(256);
__ubuf__     half* scalar41 = (__ubuf__  half *)get_imm(1024);
__ubuf__     half* cmpsel_1_local_UB1 = (__ubuf__  half *)get_imm(44288);
__ubuf__     half* diff_local_UB1 = (__ubuf__  half *)get_imm(87040);
    copy_gm_to_ubuf(((__ubuf__ half *)data_local_UB + 0), ((__gm__ half *)data + 0), 0, 1, 656, 0, 0);
    set_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    vector_dup(((__ubuf__ half *)scalar1 + 0), (half)0.000000e+00f, 1, 1, 1, 8, 8);
    vector_dup(((__ubuf__ half *)scalar3 + 0), (half)1.000000e+00f, 1, 1, 1, 8, 8);
    vector_dup(((__ubuf__ half *)scalar4 + 0), (half)0.000000e+00f, 1, 1, 1, 8, 8);
    wait_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    pipe_barrier(PIPE_V);
    for (int32_t cmp_index = 0; cmp_index < 82; ++cmp_index) {
      pipe_barrier(PIPE_V);
      vcmp_lt(((__ubuf__ half *)scalar1 + 0), ((__ubuf__ half *)data_local_UB + (cmp_index * 128)), 1, 1, 1, 1, 8, 8, 8);
      pipe_barrier(PIPE_V);
      vsel(((__ubuf__ half *)cmpsel_1_local_UB + (cmp_index * 128)), ((__ubuf__ half *)scalar3 + 0), ((__ubuf__ half *)scalar4 + 0), (uint64_t)72066424624972033);
    }
    copy_gm_to_ubuf(((__ubuf__ half *)diff_local_UB + 0), ((__gm__ half *)diff + 0), 0, 1, 656, 0, 0);
    set_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    set_vector_mask((uint64_t)18446744073709551615, (uint64_t)18446744073709551615);
    wait_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    vmul(((__ubuf__ half *)cmpsel_1_local_UB + 0), ((__ubuf__ half *)cmpsel_1_local_UB + 0), ((__ubuf__ half *)diff_local_UB + 0), (uint8_t)82, (uint8_t)1, (uint8_t)1, (uint8_t)1, (uint8_t)8, (uint8_t)8, (uint8_t)8);
    set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    copy_ubuf_to_gm(((__gm__ half *)mul_2 + 0), ((__ubuf__ half *)cmpsel_1_local_UB + 0), 0, 1, 656, 0, 0);
    copy_gm_to_ubuf(((__ubuf__ half *)data_local_UB1 + 0), ((__gm__ half *)data + 10496), 0, 1, 656, 0, 0);
    set_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    vector_dup(((__ubuf__ half *)scalar11 + 0), (half)0.000000e+00f, 1, 1, 1, 8, 8);
    vector_dup(((__ubuf__ half *)scalar31 + 0), (half)1.000000e+00f, 1, 1, 1, 8, 8);
    vector_dup(((__ubuf__ half *)scalar41 + 0), (half)0.000000e+00f, 1, 1, 1, 8, 8);
    wait_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    pipe_barrier(PIPE_V);
    for (int32_t cmp_index1 = 0; cmp_index1 < 82; ++cmp_index1) {
      pipe_barrier(PIPE_V);
      vcmp_lt(((__ubuf__ half *)scalar11 + 0), ((__ubuf__ half *)data_local_UB1 + (cmp_index1 * 128)), 1, 1, 1, 1, 8, 8, 8);
      pipe_barrier(PIPE_V);
      vsel(((__ubuf__ half *)cmpsel_1_local_UB1 + (cmp_index1 * 128)), ((__ubuf__ half *)scalar31 + 0), ((__ubuf__ half *)scalar41 + 0), (uint64_t)72066424624972033);
    }
    copy_gm_to_ubuf(((__ubuf__ half *)diff_local_UB1 + 0), ((__gm__ half *)diff + 10496), 0, 1, 656, 0, 0);
    set_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    pipe_barrier(PIPE_V);
    wait_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    vmul(((__ubuf__ half *)cmpsel_1_local_UB1 + 0), ((__ubuf__ half *)cmpsel_1_local_UB1 + 0), ((__ubuf__ half *)diff_local_UB1 + 0), (uint8_t)82, (uint8_t)1, (uint8_t)1, (uint8_t)1, (uint8_t)8, (uint8_t)8, (uint8_t)8);
    set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    copy_ubuf_to_gm(((__gm__ half *)mul_2 + 10496), ((__ubuf__ half *)cmpsel_1_local_UB1 + 0), 0, 1, 344, 0, 0);
  } else {
__ubuf__     half* data_local_UB2 = (__ubuf__  half *)get_imm(0);
__ubuf__     half* scalar12 = (__ubuf__  half *)get_imm(20992);
__ubuf__     half* scalar32 = (__ubuf__  half *)get_imm(21248);
__ubuf__     half* scalar42 = (__ubuf__  half *)get_imm(22016);
__ubuf__     half* cmpsel_1_local_UB2 = (__ubuf__  half *)get_imm(22784);
__ubuf__     half* diff_local_UB2 = (__ubuf__  half *)get_imm(44544);
__ubuf__     half* data_local_UB3 = (__ubuf__  half *)get_imm(65792);
__ubuf__     half* scalar13 = (__ubuf__  half *)get_imm(0);
__ubuf__     half* scalar33 = (__ubuf__  half *)get_imm(256);
__ubuf__     half* scalar43 = (__ubuf__  half *)get_imm(1024);
__ubuf__     half* cmpsel_1_local_UB3 = (__ubuf__  half *)get_imm(1792);
__ubuf__     half* diff_local_UB3 = (__ubuf__  half *)get_imm(76800);
    copy_gm_to_ubuf(((__ubuf__ half *)data_local_UB2 + 0), ((__gm__ half *)data + 16000), 0, 1, 656, 0, 0);
    set_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    vector_dup(((__ubuf__ half *)scalar12 + 0), (half)0.000000e+00f, 1, 1, 1, 8, 8);
    vector_dup(((__ubuf__ half *)scalar32 + 0), (half)1.000000e+00f, 1, 1, 1, 8, 8);
    vector_dup(((__ubuf__ half *)scalar42 + 0), (half)0.000000e+00f, 1, 1, 1, 8, 8);
    wait_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    pipe_barrier(PIPE_V);
    for (int32_t cmp_index2 = 0; cmp_index2 < 82; ++cmp_index2) {
      pipe_barrier(PIPE_V);
      vcmp_lt(((__ubuf__ half *)scalar12 + 0), ((__ubuf__ half *)data_local_UB2 + (cmp_index2 * 128)), 1, 1, 1, 1, 8, 8, 8);
      pipe_barrier(PIPE_V);
      vsel(((__ubuf__ half *)cmpsel_1_local_UB2 + (cmp_index2 * 128)), ((__ubuf__ half *)scalar32 + 0), ((__ubuf__ half *)scalar42 + 0), (uint64_t)72066424624972033);
    }
    copy_gm_to_ubuf(((__ubuf__ half *)diff_local_UB2 + 0), ((__gm__ half *)diff + 16000), 0, 1, 656, 0, 0);
    set_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    set_vector_mask((uint64_t)18446744073709551615, (uint64_t)18446744073709551615);
    wait_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    vmul(((__ubuf__ half *)cmpsel_1_local_UB2 + 0), ((__ubuf__ half *)cmpsel_1_local_UB2 + 0), ((__ubuf__ half *)diff_local_UB2 + 0), (uint8_t)82, (uint8_t)1, (uint8_t)1, (uint8_t)1, (uint8_t)8, (uint8_t)8, (uint8_t)8);
    set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    copy_ubuf_to_gm(((__gm__ half *)mul_2 + 16000), ((__ubuf__ half *)cmpsel_1_local_UB2 + 0), 0, 1, 656, 0, 0);
    copy_gm_to_ubuf(((__ubuf__ half *)data_local_UB3 + 0), ((__gm__ half *)data + 26496), 0, 1, 344, 0, 0);
    set_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    vector_dup(((__ubuf__ half *)scalar13 + 0), (half)0.000000e+00f, 1, 1, 1, 8, 8);
    vector_dup(((__ubuf__ half *)scalar33 + 0), (half)1.000000e+00f, 1, 1, 1, 8, 8);
    vector_dup(((__ubuf__ half *)scalar43 + 0), (half)0.000000e+00f, 1, 1, 1, 8, 8);
    wait_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    pipe_barrier(PIPE_V);
    for (int32_t cmp_index3 = 0; cmp_index3 < 43; ++cmp_index3) {
      pipe_barrier(PIPE_V);
      vcmp_lt(((__ubuf__ half *)scalar13 + 0), ((__ubuf__ half *)data_local_UB3 + (cmp_index3 * 128)), 1, 1, 1, 1, 8, 8, 8);
      pipe_barrier(PIPE_V);
      vsel(((__ubuf__ half *)cmpsel_1_local_UB3 + (cmp_index3 * 128)), ((__ubuf__ half *)scalar33 + 0), ((__ubuf__ half *)scalar43 + 0), (uint64_t)72066424624972033);
    }
    copy_gm_to_ubuf(((__ubuf__ half *)diff_local_UB3 + 0), ((__gm__ half *)diff + 26496), 0, 1, 344, 0, 0);
    set_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    pipe_barrier(PIPE_V);
    wait_flag(PIPE_MTE2, PIPE_V, EVENT_ID0);
    vmul(((__ubuf__ half *)cmpsel_1_local_UB3 + 0), ((__ubuf__ half *)cmpsel_1_local_UB3 + 0), ((__ubuf__ half *)diff_local_UB3 + 0), (uint8_t)43, (uint8_t)1, (uint8_t)1, (uint8_t)1, (uint8_t)8, (uint8_t)8, (uint8_t)8);
    set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    copy_ubuf_to_gm(((__gm__ half *)mul_2 + 26496), ((__ubuf__ half *)cmpsel_1_local_UB3 + 0), 0, 1, 344, 0, 0);
  }
  pipe_barrier(PIPE_ALL);
}

