#ifdef __CCE_KT_TEST__
#define __aicore__ 
#else
#define __aicore__ [aicore]
#endif

extern "C"  __global__ __aicore__ void conv_bw_input_op_64_128_128_28_28_3_3_1_1_1_1__kernel0(__gm__ half* __restrict__ filter, __gm__ half* __restrict__ dedy, __gm__ half* __restrict__ c_ddr) {
set_l1_3d_size(0);
set_padding(0);
__cbuf__   half* filter_local_L1 = (__cbuf__  half *)get_imm(0);
__cc__   float* C = (__cc__  float *)get_imm(0);
__cbuf__   half* dedy_local_L1_1 = (__cbuf__  half *)get_imm(294912);
__ca__   half* im2col_fractal_2 = (__ca__  half *)get_imm(0);
__cb__   half* w_col_3 = (__cb__  half *)get_imm(0);
__ca__   half* im2col_fractal_4 = (__ca__  half *)get_imm(16384);
__cb__   half* w_col_5 = (__cb__  half *)get_imm(2048);
__cbuf__   half* dedy_local_L1_6 = (__cbuf__  half *)get_imm(332800);
__ubuf__   half* c_ub = (__ubuf__  half *)get_imm(0);
__cc__   float* C1 = (__cc__  float *)get_imm(131072);
__cbuf__   half* dedy_local_L1_7 = (__cbuf__  half *)get_imm(370688);
__ca__   half* im2col_fractal_8 = (__ca__  half *)get_imm(32768);
__cb__   half* w_col_9 = (__cb__  half *)get_imm(4096);
__ca__   half* im2col_fractal_10 = (__ca__  half *)get_imm(41472);
__cb__   half* w_col_11 = (__cb__  half *)get_imm(6144);
__cbuf__   half* dedy_local_L1_12 = (__cbuf__  half *)get_imm(390656);
__ubuf__   half* c_ub1 = (__ubuf__  half *)get_imm(65536);
  set_padding((uint64_t)0ULL);
  copy_gm_to_cbuf(((__cbuf__ half *)filter_local_L1), ((__gm__ half *)filter), 0, 1, 9216, 0, 0, PAD_NONE);
  for (int32_t dx_batch_idx_outer_inner = 0; dx_batch_idx_outer_inner < 32; ++dx_batch_idx_outer_inner) {
    for (int32_t dx_cin1_idx_outer_inner = 0; dx_cin1_idx_outer_inner < 2; ++dx_cin1_idx_outer_inner) {
      set_fmatrix(0x101010015001c);
      if ((dx_cin1_idx_outer_inner + dx_batch_idx_outer_inner) != 0) {
        wait_flag(PIPE_V, PIPE_M, EVENT_ID0);
      }
      for (int32_t axis_k1_outer_outer_db = 0; axis_k1_outer_outer_db < 2; ++axis_k1_outer_outer_db) {
        if (0 < axis_k1_outer_outer_db) {
          wait_flag(PIPE_MTE1, PIPE_MTE2, EVENT_ID0);
        }
        copy_gm_to_cbuf(((__cbuf__ half *)dedy_local_L1_1), ((__gm__ half *)dedy + (((((int32_t)block_idx) * 3211264) + (dx_batch_idx_outer_inner * 100352)) + (axis_k1_outer_outer_db * 50176))), 0, 2, 588, 196, 0, PAD_NONE);
        set_flag(PIPE_MTE2, PIPE_MTE1, EVENT_ID0);
                wait_flag(PIPE_MTE2, PIPE_MTE1, EVENT_ID0);
        for (int32_t axis_k1_outer_inner_db = 0; axis_k1_outer_inner_db < 9; ++axis_k1_outer_inner_db) {
          if ((axis_k1_outer_inner_db + axis_k1_outer_outer_db) != 0) {
            wait_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
          }
          img2col_cbuf_to_ca(((__ca__ half *)im2col_fractal_2), ((__cbuf__ half *)dedy_local_L1_1), ((uint64_t)((((int64_t)(axis_k1_outer_inner_db * 2)) - ((int64_t)(((uint64_t)(((int64_t)(axis_k1_outer_inner_db * 2)) / (int64_t)9)) * (uint64_t)9ULL))) % (int64_t)3)), ((uint64_t)((((int64_t)(axis_k1_outer_inner_db * 2)) % (int64_t)9) / (int64_t)3)), (int64_t)-1, (int64_t)-1, ((uint64_t)(((int64_t)(axis_k1_outer_inner_db * 2)) / (int64_t)9)), (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)3ULL, (uint64_t)3ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)32ULL, CSIZE0);
          load_cbuf_to_cb(((__cb__ half *)w_col_3), ((__cbuf__ half *)filter_local_L1 + (((((dx_cin1_idx_outer_inner * 73728) + (axis_k1_outer_outer_db * 1024)) + (((axis_k1_outer_inner_db * 2) / 9) * 256)) + 16384) - (((axis_k1_outer_inner_db * 2) % 9) * 2048))), 0, 4, 72, 0, 1);
          set_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
          wait_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
          mad(((__cc__ float *)C), ((__ca__ half *)im2col_fractal_2), ((__cb__ half *)w_col_3), 512, 16, 64, ((axis_k1_outer_outer_db == 0) && (axis_k1_outer_inner_db == 0)));
          set_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
          if ((axis_k1_outer_inner_db + axis_k1_outer_outer_db) != 0) {
            wait_flag(PIPE_M, PIPE_MTE1, EVENT_ID1);
          }
          img2col_cbuf_to_ca(((__ca__ half *)im2col_fractal_4), ((__cbuf__ half *)dedy_local_L1_1), ((uint64_t)((((int64_t)((axis_k1_outer_inner_db * 2) + 1)) - ((int64_t)(((uint64_t)(((int64_t)((axis_k1_outer_inner_db * 2) + 1)) / (int64_t)9)) * (uint64_t)9ULL))) % (int64_t)3)), ((uint64_t)((((int64_t)((axis_k1_outer_inner_db * 2) + 1)) % (int64_t)9) / (int64_t)3)), (int64_t)-1, (int64_t)-1, ((uint64_t)(((int64_t)((axis_k1_outer_inner_db * 2) + 1)) / (int64_t)9)), (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)3ULL, (uint64_t)3ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)32ULL, CSIZE0);
          load_cbuf_to_cb(((__cb__ half *)w_col_5), ((__cbuf__ half *)filter_local_L1 + (((((dx_cin1_idx_outer_inner * 73728) + (axis_k1_outer_outer_db * 1024)) + ((((axis_k1_outer_inner_db * 2) + 1) / 9) * 256)) + 16384) - ((((axis_k1_outer_inner_db * 2) + 1) % 9) * 2048))), 0, 4, 72, 0, 1);
          set_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
          wait_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
          mad(((__cc__ float *)C), ((__ca__ half *)im2col_fractal_4), ((__cb__ half *)w_col_5), 512, 16, 64, (int8_t)0ULL);
          set_flag(PIPE_M, PIPE_MTE1, EVENT_ID1);
        }
        if (axis_k1_outer_outer_db < 1) {
          set_flag(PIPE_MTE1, PIPE_MTE2, EVENT_ID0);
        }
        if (0 < axis_k1_outer_outer_db) {
          wait_flag(PIPE_MTE1, PIPE_MTE2, EVENT_ID1);
        }
        copy_gm_to_cbuf(((__cbuf__ half *)dedy_local_L1_6), ((__gm__ half *)dedy + ((((((int32_t)block_idx) * 3211264) + (dx_batch_idx_outer_inner * 100352)) + (axis_k1_outer_outer_db * 50176)) + 25088)), 0, 2, 588, 196, 0, PAD_NONE);
        set_flag(PIPE_MTE2, PIPE_MTE1, EVENT_ID0);
                wait_flag(PIPE_MTE2, PIPE_MTE1, EVENT_ID0);
        for (int32_t axis_k1_outer_inner_db1 = 0; axis_k1_outer_inner_db1 < 9; ++axis_k1_outer_inner_db1) {
          wait_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
          img2col_cbuf_to_ca(((__ca__ half *)im2col_fractal_2), ((__cbuf__ half *)dedy_local_L1_6), ((uint64_t)((((int64_t)(axis_k1_outer_inner_db1 * 2)) - ((int64_t)(((uint64_t)(((int64_t)(axis_k1_outer_inner_db1 * 2)) / (int64_t)9)) * (uint64_t)9ULL))) % (int64_t)3)), ((uint64_t)((((int64_t)(axis_k1_outer_inner_db1 * 2)) % (int64_t)9) / (int64_t)3)), (int64_t)-1, (int64_t)-1, ((uint64_t)(((int64_t)(axis_k1_outer_inner_db1 * 2)) / (int64_t)9)), (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)3ULL, (uint64_t)3ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)32ULL, CSIZE0);
          load_cbuf_to_cb(((__cb__ half *)w_col_3), ((__cbuf__ half *)filter_local_L1 + (((((dx_cin1_idx_outer_inner * 73728) + (axis_k1_outer_outer_db * 1024)) + (((axis_k1_outer_inner_db1 * 2) / 9) * 256)) + 16896) - (((axis_k1_outer_inner_db1 * 2) % 9) * 2048))), 0, 4, 72, 0, 1);
          set_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
          wait_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
          mad(((__cc__ float *)C), ((__ca__ half *)im2col_fractal_2), ((__cb__ half *)w_col_3), 512, 16, 64, (int8_t)0ULL);
          if ((axis_k1_outer_inner_db1 + axis_k1_outer_outer_db) != 9) {
            set_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
          }
          wait_flag(PIPE_M, PIPE_MTE1, EVENT_ID1);
          img2col_cbuf_to_ca(((__ca__ half *)im2col_fractal_4), ((__cbuf__ half *)dedy_local_L1_6), ((uint64_t)((((int64_t)((axis_k1_outer_inner_db1 * 2) + 1)) - ((int64_t)(((uint64_t)(((int64_t)((axis_k1_outer_inner_db1 * 2) + 1)) / (int64_t)9)) * (uint64_t)9ULL))) % (int64_t)3)), ((uint64_t)((((int64_t)((axis_k1_outer_inner_db1 * 2) + 1)) % (int64_t)9) / (int64_t)3)), (int64_t)-1, (int64_t)-1, ((uint64_t)(((int64_t)((axis_k1_outer_inner_db1 * 2) + 1)) / (int64_t)9)), (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)3ULL, (uint64_t)3ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)32ULL, CSIZE0);
          load_cbuf_to_cb(((__cb__ half *)w_col_5), ((__cbuf__ half *)filter_local_L1 + (((((dx_cin1_idx_outer_inner * 73728) + (axis_k1_outer_outer_db * 1024)) + ((((axis_k1_outer_inner_db1 * 2) + 1) / 9) * 256)) + 16896) - ((((axis_k1_outer_inner_db1 * 2) + 1) % 9) * 2048))), 0, 4, 72, 0, 1);
          set_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
          wait_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
          mad(((__cc__ float *)C), ((__ca__ half *)im2col_fractal_4), ((__cb__ half *)w_col_5), 512, 16, 64, (int8_t)0ULL);
          if ((axis_k1_outer_inner_db1 + axis_k1_outer_outer_db) != 9) {
            set_flag(PIPE_M, PIPE_MTE1, EVENT_ID1);
          }
        }
        if (axis_k1_outer_outer_db < 1) {
          set_flag(PIPE_MTE1, PIPE_MTE2, EVENT_ID1);
        }
      }
      set_flag(PIPE_M, PIPE_V, EVENT_ID0);
      if ((dx_cin1_idx_outer_inner + dx_batch_idx_outer_inner) != 0) {
        wait_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
      }
      wait_flag(PIPE_M, PIPE_V, EVENT_ID0);
      copy_matrix_cc_to_ubuf(((__ubuf__ half *)c_ub), ((__cc__ float *)C), 0, 1, 128, 0, 0, CRMODE_F32toF16_NONE);
      set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
      if ((dx_cin1_idx_outer_inner + dx_batch_idx_outer_inner) != 32) {
        set_flag(PIPE_V, PIPE_M, EVENT_ID0);
      }
      wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
      for (int32_t dx_cin1_idx_inner = 0; dx_cin1_idx_inner < 4; ++dx_cin1_idx_inner) {
        copy_ubuf_to_gm(((__gm__ half *)c_ddr + ((((((int32_t)block_idx) * 3211264) + (dx_batch_idx_outer_inner * 100352)) + (dx_cin1_idx_outer_inner * 50176)) + (dx_cin1_idx_inner * 12544))), ((__ubuf__ half *)c_ub + (dx_cin1_idx_inner * 8192)), 0, 1, 512, 0, 0);
      }
      if ((dx_cin1_idx_outer_inner + dx_batch_idx_outer_inner) != 32) {
        set_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
      }
      set_fmatrix(0x1000101000b001c);
      if ((dx_cin1_idx_outer_inner + dx_batch_idx_outer_inner) != 0) {
        wait_flag(PIPE_V, PIPE_M, EVENT_ID1);
      }
      for (int32_t axis_k1_outer_outer_db1 = 0; axis_k1_outer_outer_db1 < 2; ++axis_k1_outer_outer_db1) {
        if (0 < axis_k1_outer_outer_db1) {
          wait_flag(PIPE_MTE1, PIPE_MTE2, EVENT_ID0);
        }
        copy_gm_to_cbuf(((__cbuf__ half *)dedy_local_L1_7), ((__gm__ half *)dedy + ((((((int32_t)block_idx) * 3211264) + (dx_batch_idx_outer_inner * 100352)) + (axis_k1_outer_outer_db1 * 50176)) + 7616)), 0, 2, 308, 476, 0, PAD_NONE);
        set_flag(PIPE_MTE2, PIPE_MTE1, EVENT_ID0);
                wait_flag(PIPE_MTE2, PIPE_MTE1, EVENT_ID0);
        for (int32_t axis_k1_outer_inner_db2 = 0; axis_k1_outer_inner_db2 < 9; ++axis_k1_outer_inner_db2) {
          if ((axis_k1_outer_inner_db2 + axis_k1_outer_outer_db1) != 0) {
            wait_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
          }
          img2col_cbuf_to_ca(((__ca__ half *)im2col_fractal_8), ((__cbuf__ half *)dedy_local_L1_7), ((uint64_t)((((int64_t)(axis_k1_outer_inner_db2 * 2)) - ((int64_t)(((uint64_t)(((int64_t)(axis_k1_outer_inner_db2 * 2)) / (int64_t)9)) * (uint64_t)9ULL))) % (int64_t)3)), ((uint64_t)((((int64_t)(axis_k1_outer_inner_db2 * 2)) % (int64_t)9) / (int64_t)3)), (int64_t)7, (int64_t)0, ((uint64_t)(((int64_t)(axis_k1_outer_inner_db2 * 2)) / (int64_t)9)), (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)3ULL, (uint64_t)3ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)17ULL, CSIZE0);
          load_cbuf_to_cb(((__cb__ half *)w_col_9), ((__cbuf__ half *)filter_local_L1 + (((((dx_cin1_idx_outer_inner * 73728) + (axis_k1_outer_outer_db1 * 1024)) + (((axis_k1_outer_inner_db2 * 2) / 9) * 256)) + 16384) - (((axis_k1_outer_inner_db2 * 2) % 9) * 2048))), 0, 4, 72, 0, 1);
          set_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
          wait_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
          mad(((__cc__ float *)C1), ((__ca__ half *)im2col_fractal_8), ((__cb__ half *)w_col_9), 272, 16, 64, ((axis_k1_outer_outer_db1 == 0) && (axis_k1_outer_inner_db2 == 0)));
          set_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
          if ((axis_k1_outer_inner_db2 + axis_k1_outer_outer_db1) != 0) {
            wait_flag(PIPE_M, PIPE_MTE1, EVENT_ID1);
          }
          img2col_cbuf_to_ca(((__ca__ half *)im2col_fractal_10), ((__cbuf__ half *)dedy_local_L1_7), ((uint64_t)((((int64_t)((axis_k1_outer_inner_db2 * 2) + 1)) - ((int64_t)(((uint64_t)(((int64_t)((axis_k1_outer_inner_db2 * 2) + 1)) / (int64_t)9)) * (uint64_t)9ULL))) % (int64_t)3)), ((uint64_t)((((int64_t)((axis_k1_outer_inner_db2 * 2) + 1)) % (int64_t)9) / (int64_t)3)), (int64_t)7, (int64_t)0, ((uint64_t)(((int64_t)((axis_k1_outer_inner_db2 * 2) + 1)) / (int64_t)9)), (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)3ULL, (uint64_t)3ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)17ULL, CSIZE0);
          load_cbuf_to_cb(((__cb__ half *)w_col_11), ((__cbuf__ half *)filter_local_L1 + (((((dx_cin1_idx_outer_inner * 73728) + (axis_k1_outer_outer_db1 * 1024)) + ((((axis_k1_outer_inner_db2 * 2) + 1) / 9) * 256)) + 16384) - ((((axis_k1_outer_inner_db2 * 2) + 1) % 9) * 2048))), 0, 4, 72, 0, 1);
          set_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
          wait_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
          mad(((__cc__ float *)C1), ((__ca__ half *)im2col_fractal_10), ((__cb__ half *)w_col_11), 272, 16, 64, (int8_t)0ULL);
          set_flag(PIPE_M, PIPE_MTE1, EVENT_ID1);
        }
        if (axis_k1_outer_outer_db1 < 1) {
          set_flag(PIPE_MTE1, PIPE_MTE2, EVENT_ID0);
        }
        if (0 < axis_k1_outer_outer_db1) {
          wait_flag(PIPE_MTE1, PIPE_MTE2, EVENT_ID1);
        }
        copy_gm_to_cbuf(((__cbuf__ half *)dedy_local_L1_12), ((__gm__ half *)dedy + ((((((int32_t)block_idx) * 3211264) + (dx_batch_idx_outer_inner * 100352)) + (axis_k1_outer_outer_db1 * 50176)) + 32704)), 0, 2, 308, 476, 0, PAD_NONE);
        set_flag(PIPE_MTE2, PIPE_MTE1, EVENT_ID0);
                wait_flag(PIPE_MTE2, PIPE_MTE1, EVENT_ID0);
        for (int32_t axis_k1_outer_inner_db3 = 0; axis_k1_outer_inner_db3 < 9; ++axis_k1_outer_inner_db3) {
          wait_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
          img2col_cbuf_to_ca(((__ca__ half *)im2col_fractal_8), ((__cbuf__ half *)dedy_local_L1_12), ((uint64_t)((((int64_t)(axis_k1_outer_inner_db3 * 2)) - ((int64_t)(((uint64_t)(((int64_t)(axis_k1_outer_inner_db3 * 2)) / (int64_t)9)) * (uint64_t)9ULL))) % (int64_t)3)), ((uint64_t)((((int64_t)(axis_k1_outer_inner_db3 * 2)) % (int64_t)9) / (int64_t)3)), (int64_t)7, (int64_t)0, ((uint64_t)(((int64_t)(axis_k1_outer_inner_db3 * 2)) / (int64_t)9)), (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)3ULL, (uint64_t)3ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)17ULL, CSIZE0);
          load_cbuf_to_cb(((__cb__ half *)w_col_9), ((__cbuf__ half *)filter_local_L1 + (((((dx_cin1_idx_outer_inner * 73728) + (axis_k1_outer_outer_db1 * 1024)) + (((axis_k1_outer_inner_db3 * 2) / 9) * 256)) + 16896) - (((axis_k1_outer_inner_db3 * 2) % 9) * 2048))), 0, 4, 72, 0, 1);
          set_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
          wait_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
          mad(((__cc__ float *)C1), ((__ca__ half *)im2col_fractal_8), ((__cb__ half *)w_col_9), 272, 16, 64, (int8_t)0ULL);
          if ((axis_k1_outer_inner_db3 + axis_k1_outer_outer_db1) != 9) {
            set_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
          }
          wait_flag(PIPE_M, PIPE_MTE1, EVENT_ID1);
          img2col_cbuf_to_ca(((__ca__ half *)im2col_fractal_10), ((__cbuf__ half *)dedy_local_L1_12), ((uint64_t)((((int64_t)((axis_k1_outer_inner_db3 * 2) + 1)) - ((int64_t)(((uint64_t)(((int64_t)((axis_k1_outer_inner_db3 * 2) + 1)) / (int64_t)9)) * (uint64_t)9ULL))) % (int64_t)3)), ((uint64_t)((((int64_t)((axis_k1_outer_inner_db3 * 2) + 1)) % (int64_t)9) / (int64_t)3)), (int64_t)7, (int64_t)0, ((uint64_t)(((int64_t)((axis_k1_outer_inner_db3 * 2) + 1)) / (int64_t)9)), (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)3ULL, (uint64_t)3ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)17ULL, CSIZE0);
          load_cbuf_to_cb(((__cb__ half *)w_col_11), ((__cbuf__ half *)filter_local_L1 + (((((dx_cin1_idx_outer_inner * 73728) + (axis_k1_outer_outer_db1 * 1024)) + ((((axis_k1_outer_inner_db3 * 2) + 1) / 9) * 256)) + 16896) - ((((axis_k1_outer_inner_db3 * 2) + 1) % 9) * 2048))), 0, 4, 72, 0, 1);
          set_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
          wait_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
          mad(((__cc__ float *)C1), ((__ca__ half *)im2col_fractal_10), ((__cb__ half *)w_col_11), 272, 16, 64, (int8_t)0ULL);
          if ((axis_k1_outer_inner_db3 + axis_k1_outer_outer_db1) != 9) {
            set_flag(PIPE_M, PIPE_MTE1, EVENT_ID1);
          }
        }
        if (axis_k1_outer_outer_db1 < 1) {
          set_flag(PIPE_MTE1, PIPE_MTE2, EVENT_ID1);
        }
      }
      set_flag(PIPE_M, PIPE_V, EVENT_ID0);
      if ((dx_cin1_idx_outer_inner + dx_batch_idx_outer_inner) != 0) {
        wait_flag(PIPE_MTE3, PIPE_V, EVENT_ID1);
      }
      wait_flag(PIPE_M, PIPE_V, EVENT_ID0);
      copy_matrix_cc_to_ubuf(((__ubuf__ half *)c_ub1), ((__cc__ float *)C1), 0, 1, 68, 0, 0, CRMODE_F32toF16_NONE);
      set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
      if ((dx_cin1_idx_outer_inner + dx_batch_idx_outer_inner) != 32) {
        set_flag(PIPE_V, PIPE_M, EVENT_ID1);
      }
      wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
      pipe_barrier(PIPE_MTE3);
      for (int32_t dx_cin1_idx_inner1 = 0; dx_cin1_idx_inner1 < 4; ++dx_cin1_idx_inner1) {
        copy_ubuf_to_gm(((__gm__ half *)c_ddr + (((((((int32_t)block_idx) * 3211264) + (dx_batch_idx_outer_inner * 100352)) + (dx_cin1_idx_outer_inner * 50176)) + (dx_cin1_idx_inner1 * 12544)) + 8192)), ((__ubuf__ half *)c_ub1 + (dx_cin1_idx_inner1 * 4352)), 0, 1, 272, 0, 0);
      }
      if ((dx_cin1_idx_outer_inner + dx_batch_idx_outer_inner) != 32) {
        set_flag(PIPE_MTE3, PIPE_V, EVENT_ID1);
      }
    }
  }
  pipe_barrier(PIPE_ALL);
}

