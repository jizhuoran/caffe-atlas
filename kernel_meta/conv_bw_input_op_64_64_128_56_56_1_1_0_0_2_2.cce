#ifdef __CCE_KT_TEST__
#define __aicore__ 
#else
#define __aicore__ [aicore]
#endif

extern "C"  __global__ __aicore__ void conv_bw_input_op_64_64_128_56_56_1_1_0_0_2_2__kernel0(__gm__ half* __restrict__ filter, __gm__ half* __restrict__ dedy, __gm__ half* __restrict__ CUB_dilation_img) {
set_padding(0);
set_vector_mask((uint64_t)-1, (uint64_t)-1);
set_ctrl(sbitset0(get_ctrl(), 56));
__cbuf__   half* filter_B_l1 = (__cbuf__  half *)get_imm(0);
__cbuf__   half* dedy_col = (__cbuf__  half *)get_imm(16384);
__cb__   half* filter_B_l0b = (__cb__  half *)get_imm(0);
__ca__   half* dedy_col_fractal = (__ca__  half *)get_imm(0);
__cc__   float* C_1 = (__cc__  float *)get_imm(0);
__ubuf__   half* CUB_2 = (__ubuf__  half *)get_imm(0);
__ubuf__   half* CUB_dilation_3 = (__ubuf__  half *)get_imm(14336);
__cbuf__   half* dedy_col1 = (__cbuf__  half *)get_imm(45056);
__cb__   half* filter_B_l0b1 = (__cb__  half *)get_imm(16384);
__ca__   half* dedy_col_fractal1 = (__ca__  half *)get_imm(28672);
__cc__   float* C_4 = (__cc__  float *)get_imm(28672);
__ubuf__   half* CUB_5 = (__ubuf__  half *)get_imm(71680);
__ubuf__   half* CUB_dilation_6 = (__ubuf__  half *)get_imm(86016);
__cbuf__   half* dedy_col2 = (__cbuf__  half *)get_imm(73728);
__cb__   half* filter_B_l0b2 = (__cb__  half *)get_imm(32768);
  copy_gm_to_cbuf(((__cbuf__ half *)filter_B_l1), ((__gm__ half *)filter), 0, 1, 512, 0, 0, PAD_NONE);
  set_flag(PIPE_MTE2, PIPE_MTE1, EVENT_ID0);
  wait_flag(PIPE_MTE2, PIPE_MTE1, EVENT_ID0);
  for (int32_t n_inner_outer = 0; n_inner_outer < 32; ++n_inner_outer) {
    if (0 < n_inner_outer) {
      wait_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
    }
    pipe_barrier(PIPE_V);
    for (int32_t hw_outer_outer_db = 0; hw_outer_outer_db < 3; ++hw_outer_outer_db) {
      if ((hw_outer_outer_db + n_inner_outer) != 0) {
        wait_flag(PIPE_MTE1, PIPE_MTE2, EVENT_ID0);
      }
      copy_gm_to_cbuf(((__cbuf__ half *)dedy_col), ((__gm__ half *)dedy + (((((int32_t)block_idx) * 3211264) + (n_inner_outer * 100352)) + (hw_outer_outer_db * 3584))), 0, 8, 112, 672, 0, PAD_NONE);
      set_flag(PIPE_MTE2, PIPE_MTE1, EVENT_ID0);
      if (0 < hw_outer_outer_db) {
        wait_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
      }
      for (int32_t copy_part = 0; copy_part < 8; ++copy_part) {
        load_cbuf_to_cb(((__cb__ half *)filter_B_l0b + (copy_part * 1024)), ((__cbuf__ half *)filter_B_l1 + (copy_part * 256)), 0, 4, 8, 0, 1);
      }
      wait_flag(PIPE_MTE2, PIPE_MTE1, EVENT_ID0);
      for (int32_t copy_part1 = 0; copy_part1 < 7; ++copy_part1) {
        load_cbuf_to_ca(((__ca__ half *)dedy_col_fractal + (copy_part1 * 2048)), ((__cbuf__ half *)dedy_col + (copy_part1 * 256)), 0, 8, 7, 0, 0);
      }
      set_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
      if ((hw_outer_outer_db + n_inner_outer) != 33) {
        set_flag(PIPE_MTE1, PIPE_MTE2, EVENT_ID0);
      }
      if ((hw_outer_outer_db + n_inner_outer) != 0) {
        wait_flag(PIPE_V, PIPE_M, EVENT_ID0);
      }
      wait_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
      mad(((__cc__ float *)C_1), ((__ca__ half *)dedy_col_fractal), ((__cb__ half *)filter_B_l0b), 112, 128, 64, (int8_t)1ULL);
      set_flag(PIPE_M, PIPE_V, EVENT_ID0);
      set_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
      wait_flag(PIPE_M, PIPE_V, EVENT_ID0);
      copy_matrix_cc_to_ubuf(((__ubuf__ half *)CUB_2), ((__cc__ float *)C_1), 0, 1, 28, 0, 0, CRMODE_F32toF16_NONE);
      set_flag(PIPE_V, PIPE_M, EVENT_ID0);
      set_vector_mask(0xffffffffffffffff, 0xffffffffffffffff);
      if ((hw_outer_outer_db + n_inner_outer) != 0) {
        wait_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
      }
      vector_dup(((__ubuf__ half *)CUB_dilation_3), (half)0.000000e+00f, (uint8_t)224ULL, (uint16_t)1ULL, (uint16_t)0ULL, (uint8_t)8ULL, (uint8_t)0ULL);
      for (int32_t c1 = 0; c1 < 4; ++c1) {
        for (int32_t hw_outer_outer = 0; hw_outer_outer < 4; ++hw_outer_outer) {
          set_vector_mask(0xffffffffffffffff, 0xffffffffffffffff);
          vadd(((__ubuf__ half *)CUB_dilation_3 + ((c1 * 7168) + (hw_outer_outer * 1792))), ((__ubuf__ half *)CUB_2 + ((c1 * 1792) + (hw_outer_outer * 448))), ((__ubuf__ half *)CUB_dilation_3 + ((c1 * 7168) + (hw_outer_outer * 1792))), (uint8_t)3ULL, (uint8_t)2ULL, (uint8_t)1ULL, (uint8_t)2ULL, (uint8_t)16ULL, (uint8_t)8ULL, (uint8_t)16ULL);
          set_vector_mask(0x0, 0xffffffffffffffff);
          vadd(((__ubuf__ half *)CUB_dilation_3 + (((c1 * 7168) + (hw_outer_outer * 1792)) + 768)), ((__ubuf__ half *)CUB_2 + (((c1 * 1792) + (hw_outer_outer * 448)) + 384)), ((__ubuf__ half *)CUB_dilation_3 + (((c1 * 7168) + (hw_outer_outer * 1792)) + 768)), (uint8_t)1ULL, (uint8_t)2ULL, (uint8_t)1ULL, (uint8_t)2ULL, (uint8_t)0ULL, (uint8_t)0ULL, (uint8_t)0ULL);
        }
      }
      set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
      wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
      copy_ubuf_to_gm(((__gm__ half *)CUB_dilation_img + (((((int32_t)block_idx) * 6422528) + (n_inner_outer * 200704)) + (hw_outer_outer_db * 14336))), ((__ubuf__ half *)CUB_dilation_3), 0, 4, 448, 0, 2688);
      set_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
      if ((hw_outer_outer_db + n_inner_outer) != 0) {
        wait_flag(PIPE_MTE1, PIPE_MTE2, EVENT_ID1);
      }
      copy_gm_to_cbuf(((__cbuf__ half *)dedy_col1), ((__gm__ half *)dedy + ((((((int32_t)block_idx) * 3211264) + (n_inner_outer * 100352)) + (hw_outer_outer_db * 3584)) + 1792)), 0, 8, 112, 672, 0, PAD_NONE);
      set_flag(PIPE_MTE2, PIPE_MTE1, EVENT_ID0);
      if (0 < hw_outer_outer_db) {
        wait_flag(PIPE_M, PIPE_MTE1, EVENT_ID1);
      }
      for (int32_t copy_part2 = 0; copy_part2 < 8; ++copy_part2) {
        load_cbuf_to_cb(((__cb__ half *)filter_B_l0b1 + (copy_part2 * 1024)), ((__cbuf__ half *)filter_B_l1 + (copy_part2 * 256)), 0, 4, 8, 0, 1);
      }
      wait_flag(PIPE_MTE2, PIPE_MTE1, EVENT_ID0);
      for (int32_t copy_part3 = 0; copy_part3 < 7; ++copy_part3) {
        load_cbuf_to_ca(((__ca__ half *)dedy_col_fractal1 + (copy_part3 * 2048)), ((__cbuf__ half *)dedy_col1 + (copy_part3 * 256)), 0, 8, 7, 0, 0);
      }
      set_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
      if ((hw_outer_outer_db + n_inner_outer) != 33) {
        set_flag(PIPE_MTE1, PIPE_MTE2, EVENT_ID1);
      }
      if (0 < hw_outer_outer_db) {
        wait_flag(PIPE_V, PIPE_M, EVENT_ID1);
      }
      wait_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
      mad(((__cc__ float *)C_4), ((__ca__ half *)dedy_col_fractal1), ((__cb__ half *)filter_B_l0b1), 112, 128, 64, (int8_t)1ULL);
      set_flag(PIPE_M, PIPE_V, EVENT_ID0);
      if (hw_outer_outer_db < 2) {
        set_flag(PIPE_M, PIPE_MTE1, EVENT_ID1);
      }
      wait_flag(PIPE_M, PIPE_V, EVENT_ID0);
      copy_matrix_cc_to_ubuf(((__ubuf__ half *)CUB_5), ((__cc__ float *)C_4), 0, 1, 28, 0, 0, CRMODE_F32toF16_NONE);
      if (hw_outer_outer_db < 2) {
        set_flag(PIPE_V, PIPE_M, EVENT_ID1);
      }
      set_vector_mask(0xffffffffffffffff, 0xffffffffffffffff);
      if (0 < hw_outer_outer_db) {
        wait_flag(PIPE_MTE3, PIPE_V, EVENT_ID1);
      }
      vector_dup(((__ubuf__ half *)CUB_dilation_6), (half)0.000000e+00f, (uint8_t)224ULL, (uint16_t)1ULL, (uint16_t)0ULL, (uint8_t)8ULL, (uint8_t)0ULL);
      for (int32_t c11 = 0; c11 < 4; ++c11) {
        for (int32_t hw_outer_outer1 = 0; hw_outer_outer1 < 4; ++hw_outer_outer1) {
          set_vector_mask(0xffffffffffffffff, 0xffffffffffffffff);
          vadd(((__ubuf__ half *)CUB_dilation_6 + ((c11 * 7168) + (hw_outer_outer1 * 1792))), ((__ubuf__ half *)CUB_5 + ((c11 * 1792) + (hw_outer_outer1 * 448))), ((__ubuf__ half *)CUB_dilation_6 + ((c11 * 7168) + (hw_outer_outer1 * 1792))), (uint8_t)3ULL, (uint8_t)2ULL, (uint8_t)1ULL, (uint8_t)2ULL, (uint8_t)16ULL, (uint8_t)8ULL, (uint8_t)16ULL);
          set_vector_mask(0x0, 0xffffffffffffffff);
          vadd(((__ubuf__ half *)CUB_dilation_6 + (((c11 * 7168) + (hw_outer_outer1 * 1792)) + 768)), ((__ubuf__ half *)CUB_5 + (((c11 * 1792) + (hw_outer_outer1 * 448)) + 384)), ((__ubuf__ half *)CUB_dilation_6 + (((c11 * 7168) + (hw_outer_outer1 * 1792)) + 768)), (uint8_t)1ULL, (uint8_t)2ULL, (uint8_t)1ULL, (uint8_t)2ULL, (uint8_t)0ULL, (uint8_t)0ULL, (uint8_t)0ULL);
        }
      }
      set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
      wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
      copy_ubuf_to_gm(((__gm__ half *)CUB_dilation_img + ((((((int32_t)block_idx) * 6422528) + (n_inner_outer * 200704)) + (hw_outer_outer_db * 14336)) + 7168)), ((__ubuf__ half *)CUB_dilation_6), 0, 4, 448, 0, 2688);
      if (hw_outer_outer_db < 2) {
        set_flag(PIPE_MTE3, PIPE_V, EVENT_ID1);
      }
    }
    if (0 < n_inner_outer) {
      wait_flag(PIPE_MTE1, PIPE_MTE2, EVENT_ID2);
    }
    copy_gm_to_cbuf(((__cbuf__ half *)dedy_col2), ((__gm__ half *)dedy + (((((int32_t)block_idx) * 3211264) + (n_inner_outer * 100352)) + 10752)), 0, 8, 112, 672, 0, PAD_NONE);
    set_flag(PIPE_MTE2, PIPE_MTE1, EVENT_ID0);
    for (int32_t copy_part4 = 0; copy_part4 < 8; ++copy_part4) {
      load_cbuf_to_cb(((__cb__ half *)filter_B_l0b2 + (copy_part4 * 1024)), ((__cbuf__ half *)filter_B_l1 + (copy_part4 * 256)), 0, 4, 8, 0, 1);
    }
    wait_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
    wait_flag(PIPE_MTE2, PIPE_MTE1, EVENT_ID0);
    for (int32_t copy_part5 = 0; copy_part5 < 7; ++copy_part5) {
      load_cbuf_to_ca(((__ca__ half *)dedy_col_fractal + (copy_part5 * 2048)), ((__cbuf__ half *)dedy_col2 + (copy_part5 * 256)), 0, 8, 7, 0, 0);
    }
    set_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
    if (n_inner_outer < 31) {
      set_flag(PIPE_MTE1, PIPE_MTE2, EVENT_ID2);
    }
    wait_flag(PIPE_V, PIPE_M, EVENT_ID0);
    wait_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
    mad(((__cc__ float *)C_1), ((__ca__ half *)dedy_col_fractal), ((__cb__ half *)filter_B_l0b2), 112, 128, 64, (int8_t)1ULL);
    set_flag(PIPE_M, PIPE_V, EVENT_ID0);
    if (n_inner_outer < 31) {
      set_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
    }
    wait_flag(PIPE_M, PIPE_V, EVENT_ID0);
    copy_matrix_cc_to_ubuf(((__ubuf__ half *)CUB_2), ((__cc__ float *)C_1), 0, 1, 28, 0, 0, CRMODE_F32toF16_NONE);
    if (n_inner_outer < 31) {
      set_flag(PIPE_V, PIPE_M, EVENT_ID0);
    }
    set_vector_mask(0xffffffffffffffff, 0xffffffffffffffff);
    wait_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
    vector_dup(((__ubuf__ half *)CUB_dilation_3), (half)0.000000e+00f, (uint8_t)224ULL, (uint16_t)1ULL, (uint16_t)0ULL, (uint8_t)8ULL, (uint8_t)0ULL);
    for (int32_t c12 = 0; c12 < 4; ++c12) {
      for (int32_t hw_outer_outer2 = 0; hw_outer_outer2 < 4; ++hw_outer_outer2) {
        set_vector_mask(0xffffffffffffffff, 0xffffffffffffffff);
        vadd(((__ubuf__ half *)CUB_dilation_3 + ((c12 * 7168) + (hw_outer_outer2 * 1792))), ((__ubuf__ half *)CUB_2 + ((c12 * 1792) + (hw_outer_outer2 * 448))), ((__ubuf__ half *)CUB_dilation_3 + ((c12 * 7168) + (hw_outer_outer2 * 1792))), (uint8_t)3ULL, (uint8_t)2ULL, (uint8_t)1ULL, (uint8_t)2ULL, (uint8_t)16ULL, (uint8_t)8ULL, (uint8_t)16ULL);
        set_vector_mask(0x0, 0xffffffffffffffff);
        vadd(((__ubuf__ half *)CUB_dilation_3 + (((c12 * 7168) + (hw_outer_outer2 * 1792)) + 768)), ((__ubuf__ half *)CUB_2 + (((c12 * 1792) + (hw_outer_outer2 * 448)) + 384)), ((__ubuf__ half *)CUB_dilation_3 + (((c12 * 7168) + (hw_outer_outer2 * 1792)) + 768)), (uint8_t)1ULL, (uint8_t)2ULL, (uint8_t)1ULL, (uint8_t)2ULL, (uint8_t)0ULL, (uint8_t)0ULL, (uint8_t)0ULL);
      }
    }
    set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    pipe_barrier(PIPE_MTE3);
    copy_ubuf_to_gm(((__gm__ half *)CUB_dilation_img + (((((int32_t)block_idx) * 6422528) + (n_inner_outer * 200704)) + 43008)), ((__ubuf__ half *)CUB_dilation_3), 0, 4, 448, 0, 2688);
    if (n_inner_outer < 31) {
      set_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
    }
  }
  pipe_barrier(PIPE_ALL);
}

