#ifdef __CCE_KT_TEST__
#define __aicore__ 
#else
#define __aicore__ [aicore]
#endif

extern "C"  __global__ __aicore__ void conv_bw_weight_op_64_32_64_16_16_1_1_0_0_2_2__kernel0(__gm__ half* __restrict__ fmap, __gm__ half* __restrict__ dedy, __gm__ float* __restrict__ dw) {
set_l1_3d_size(0);
set_padding(0);
__cc__   float* dw_rf = (__cc__  float *)get_imm(0);
__cbuf__   half* grads_2_matrix_1 = (__cbuf__  half *)get_imm(0);
__cbuf__   half* fmap_local_L1_2 = (__cbuf__  half *)get_imm(2048);
__ca__   half* grads_2_fractal_3 = (__ca__  half *)get_imm(0);
__cb__   half* fmap_2_col_fractal_4 = (__cb__  half *)get_imm(0);
__cbuf__   half* grads_2_matrix_5 = (__cbuf__  half *)get_imm(9728);
__cbuf__   half* fmap_local_L1_6 = (__cbuf__  half *)get_imm(11776);
__ca__   half* grads_2_fractal_7 = (__ca__  half *)get_imm(2048);
__cb__   half* fmap_2_col_fractal_8 = (__cb__  half *)get_imm(2048);
__ubuf__   float* dw_rf_local_UB = (__ubuf__  float *)get_imm(0);
  set_fmatrix(0xf000f);
    for (int32_t axis_b_inner_outer_db = 0; axis_b_inner_outer_db < 16; ++axis_b_inner_outer_db) {
    if (0 < axis_b_inner_outer_db) {
      wait_flag(PIPE_MTE1, PIPE_MTE2, EVENT_ID0);
    }
    copy_gm_to_cbuf(((__cbuf__ half *)grads_2_matrix_1), ((__gm__ half *)dedy + ((((((int32_t)block_idx) >> 3) * 131072) + (axis_b_inner_outer_db * 8192)) + (((((int32_t)block_idx) & 7) >> 1) * 1024))), 0, 1, 64, 0, 0, PAD_NONE);
    set_flag(PIPE_MTE2, PIPE_MTE1, EVENT_ID0);
    if (0 < axis_b_inner_outer_db) {
      wait_flag(PIPE_MTE1, PIPE_MTE2, EVENT_ID1);
    }
    copy_gm_to_cbuf(((__cbuf__ half *)fmap_local_L1_2), ((__gm__ half *)fmap + ((((((int32_t)block_idx) >> 3) * 262144) + (axis_b_inner_outer_db * 16384)) + ((((int32_t)block_idx) & 1) * 4096))), 0, 15, 15, 1, 0, PAD_NONE);
    set_flag(PIPE_MTE2, PIPE_MTE1, EVENT_ID1);
        if (0 < axis_b_inner_outer_db) {
      wait_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
    }
    wait_flag(PIPE_MTE2, PIPE_MTE1, EVENT_ID0);
    load_cbuf_to_ca(((__ca__ half *)grads_2_fractal_3), ((__cbuf__ half *)grads_2_matrix_1), 0, 4, 1, 0, 1);
    if (axis_b_inner_outer_db < 15) {
      set_flag(PIPE_MTE1, PIPE_MTE2, EVENT_ID0);
    }
    wait_flag(PIPE_MTE2, PIPE_MTE1, EVENT_ID1);
    img2col_cbuf_to_cb(((__cb__ half *)fmap_2_col_fractal_4), ((__cbuf__ half *)fmap_local_L1_2), (uint64_t)0ULL, (uint64_t)0ULL, (int64_t)0, (int64_t)0, (uint64_t)0ULL, (uint64_t)2ULL, (uint64_t)2ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)4ULL, CSIZE0);
    set_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
    if (axis_b_inner_outer_db < 15) {
      set_flag(PIPE_MTE1, PIPE_MTE2, EVENT_ID1);
    }
    wait_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
    pipe_barrier(PIPE_M);
    mad(((__cc__ float *)dw_rf), ((__ca__ half *)grads_2_fractal_3), ((__cb__ half *)fmap_2_col_fractal_4), 16, 64, 16, (axis_b_inner_outer_db == 0));
    if (axis_b_inner_outer_db < 15) {
      set_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
    }
    if (0 < axis_b_inner_outer_db) {
      wait_flag(PIPE_MTE1, PIPE_MTE2, EVENT_ID2);
    }
    copy_gm_to_cbuf(((__cbuf__ half *)grads_2_matrix_5), ((__gm__ half *)dedy + (((((((int32_t)block_idx) >> 3) * 131072) + (axis_b_inner_outer_db * 8192)) + (((((int32_t)block_idx) & 7) >> 1) * 1024)) + 4096)), 0, 1, 64, 0, 0, PAD_NONE);
    set_flag(PIPE_MTE2, PIPE_MTE1, EVENT_ID0);
    if (0 < axis_b_inner_outer_db) {
      wait_flag(PIPE_MTE1, PIPE_MTE2, EVENT_ID3);
    }
    copy_gm_to_cbuf(((__cbuf__ half *)fmap_local_L1_6), ((__gm__ half *)fmap + (((((((int32_t)block_idx) >> 3) * 262144) + (axis_b_inner_outer_db * 16384)) + ((((int32_t)block_idx) & 1) * 4096)) + 8192)), 0, 15, 15, 1, 0, PAD_NONE);
    set_flag(PIPE_MTE2, PIPE_MTE1, EVENT_ID1);
        if (0 < axis_b_inner_outer_db) {
      wait_flag(PIPE_M, PIPE_MTE1, EVENT_ID1);
    }
    wait_flag(PIPE_MTE2, PIPE_MTE1, EVENT_ID0);
    load_cbuf_to_ca(((__ca__ half *)grads_2_fractal_7), ((__cbuf__ half *)grads_2_matrix_5), 0, 4, 1, 0, 1);
    if (axis_b_inner_outer_db < 15) {
      set_flag(PIPE_MTE1, PIPE_MTE2, EVENT_ID2);
    }
    wait_flag(PIPE_MTE2, PIPE_MTE1, EVENT_ID1);
    img2col_cbuf_to_cb(((__cb__ half *)fmap_2_col_fractal_8), ((__cbuf__ half *)fmap_local_L1_6), (uint64_t)0ULL, (uint64_t)0ULL, (int64_t)0, (int64_t)0, (uint64_t)0ULL, (uint64_t)2ULL, (uint64_t)2ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)1ULL, (uint64_t)4ULL, CSIZE0);
    set_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
    if (axis_b_inner_outer_db < 15) {
      set_flag(PIPE_MTE1, PIPE_MTE2, EVENT_ID3);
    }
    wait_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
    pipe_barrier(PIPE_M);
    mad(((__cc__ float *)dw_rf), ((__ca__ half *)grads_2_fractal_7), ((__cb__ half *)fmap_2_col_fractal_8), 16, 64, 16, (int8_t)0ULL);
    if (axis_b_inner_outer_db < 15) {
      set_flag(PIPE_M, PIPE_MTE1, EVENT_ID1);
    }
  }
  set_flag(PIPE_M, PIPE_V, EVENT_ID0);
  wait_flag(PIPE_M, PIPE_V, EVENT_ID0);
  copy_matrix_cc_to_ubuf(((__ubuf__ float *)dw_rf_local_UB), ((__cc__ float *)dw_rf), 0, 1, 1, 0, 0, CRMODE_NONE);
  set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
  wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
  copy_ubuf_to_gm(((__gm__ float *)dw + (((((int32_t)block_idx) & 1) * 1024) + (((((int32_t)block_idx) & 7) >> 1) * 256))), ((__ubuf__ float *)dw_rf_local_UB), 0, 1, 32, 0, 0);
  pipe_barrier(PIPE_ALL);
      }

