#ifdef __CCE_KT_TEST__
#define __aicore__ 
#else
#define __aicore__ [aicore]
#endif

extern "C"  __global__ __aicore__ void conv_bw_input_op_64_256_512_14_14_1_1_0_0_2_2__kernel0(__gm__ half* __restrict__ filter, __gm__ half* __restrict__ dedy, __gm__ half* __restrict__ CUB_dilation_img) {
set_padding(0);
set_vector_mask((uint64_t)-1, (uint64_t)-1);
set_ctrl(sbitset0(get_ctrl(), 56));
__cbuf__   half* filter_B_l1 = (__cbuf__  half *)get_imm(0);
__cc__   float* C = (__cc__  float *)get_imm(0);
__cbuf__   half* dedy_col_1 = (__cbuf__  half *)get_imm(262144);
__cb__   half* filter_B_l0b_2 = (__cb__  half *)get_imm(0);
__ca__   half* dedy_col_fractal_3 = (__ca__  half *)get_imm(0);
__cbuf__   half* dedy_col_4 = (__cbuf__  half *)get_imm(270336);
__cb__   half* filter_B_l0b_5 = (__cb__  half *)get_imm(32768);
__ca__   half* dedy_col_fractal_6 = (__ca__  half *)get_imm(8192);
__ubuf__   half* CUB_7 = (__ubuf__  half *)get_imm(0);
__ubuf__   half* CUB_dilation_8 = (__ubuf__  half *)get_imm(16384);
__ubuf__   half* CUB_9 = (__ubuf__  half *)get_imm(66560);
__ubuf__   half* CUB_dilation_10 = (__ubuf__  half *)get_imm(82944);
  copy_gm_to_cbuf(((__cbuf__ half *)filter_B_l1), ((__gm__ half *)filter), 0, 1, 8192, 0, 0, PAD_NONE);
  set_flag(PIPE_MTE2, PIPE_MTE1, EVENT_ID0);
  wait_flag(PIPE_MTE2, PIPE_MTE1, EVENT_ID0);
  for (int32_t n_inner_outer = 0; n_inner_outer < 32; ++n_inner_outer) {
    if (0 < n_inner_outer) {
      wait_flag(PIPE_V, PIPE_M, EVENT_ID0);
    }
    for (int32_t k1_outer_outer_inner_db = 0; k1_outer_outer_inner_db < 4; ++k1_outer_outer_inner_db) {
      if ((k1_outer_outer_inner_db + n_inner_outer) != 0) {
        wait_flag(PIPE_MTE1, PIPE_MTE2, EVENT_ID0);
      }
      copy_gm_to_cbuf(((__cbuf__ half *)dedy_col_1), ((__gm__ half *)dedy + (((((int32_t)block_idx) * 802816) + (n_inner_outer * 25088)) + (k1_outer_outer_inner_db * 6272))), 0, 4, 49, 0, 15, PAD_NONE);
      set_flag(PIPE_MTE2, PIPE_MTE1, EVENT_ID0);
      if ((k1_outer_outer_inner_db + n_inner_outer) != 0) {
        wait_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
      }
      for (int32_t copy_part = 0; copy_part < 4; ++copy_part) {
        load_cbuf_to_cb(((__cb__ half *)filter_B_l0b_2 + (copy_part * 4096)), ((__cbuf__ half *)filter_B_l1 + ((k1_outer_outer_inner_db * 2048) + (copy_part * 256))), 0, 16, 32, 0, 1);
      }
      wait_flag(PIPE_MTE2, PIPE_MTE1, EVENT_ID0);
      for (int32_t copy_part1 = 0; copy_part1 < 4; ++copy_part1) {
        load_cbuf_to_ca(((__ca__ half *)dedy_col_fractal_3 + (copy_part1 * 1024)), ((__cbuf__ half *)dedy_col_1 + (copy_part1 * 256)), 0, 4, 4, 0, 0);
      }
      set_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
      if ((k1_outer_outer_inner_db + n_inner_outer) != 34) {
        set_flag(PIPE_MTE1, PIPE_MTE2, EVENT_ID0);
      }
      wait_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
      mad(((__cc__ float *)C), ((__ca__ half *)dedy_col_fractal_3), ((__cb__ half *)filter_B_l0b_2), 64, 64, 256, (k1_outer_outer_inner_db == 0));
      if ((k1_outer_outer_inner_db + n_inner_outer) != 34) {
        set_flag(PIPE_M, PIPE_MTE1, EVENT_ID0);
      }
      if ((k1_outer_outer_inner_db + n_inner_outer) != 0) {
        wait_flag(PIPE_MTE1, PIPE_MTE2, EVENT_ID1);
      }
      copy_gm_to_cbuf(((__cbuf__ half *)dedy_col_4), ((__gm__ half *)dedy + ((((((int32_t)block_idx) * 802816) + (n_inner_outer * 25088)) + (k1_outer_outer_inner_db * 6272)) + 3136)), 0, 4, 49, 0, 15, PAD_NONE);
      set_flag(PIPE_MTE2, PIPE_MTE1, EVENT_ID0);
      if ((k1_outer_outer_inner_db + n_inner_outer) != 0) {
        wait_flag(PIPE_M, PIPE_MTE1, EVENT_ID1);
      }
      for (int32_t copy_part2 = 0; copy_part2 < 4; ++copy_part2) {
        load_cbuf_to_cb(((__cb__ half *)filter_B_l0b_5 + (copy_part2 * 4096)), ((__cbuf__ half *)filter_B_l1 + (((k1_outer_outer_inner_db * 2048) + (copy_part2 * 256)) + 1024)), 0, 16, 32, 0, 1);
      }
      wait_flag(PIPE_MTE2, PIPE_MTE1, EVENT_ID0);
      for (int32_t copy_part3 = 0; copy_part3 < 4; ++copy_part3) {
        load_cbuf_to_ca(((__ca__ half *)dedy_col_fractal_6 + (copy_part3 * 1024)), ((__cbuf__ half *)dedy_col_4 + (copy_part3 * 256)), 0, 4, 4, 0, 0);
      }
      set_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
      if ((k1_outer_outer_inner_db + n_inner_outer) != 34) {
        set_flag(PIPE_MTE1, PIPE_MTE2, EVENT_ID1);
      }
      wait_flag(PIPE_MTE1, PIPE_M, EVENT_ID0);
      mad(((__cc__ float *)C), ((__ca__ half *)dedy_col_fractal_6), ((__cb__ half *)filter_B_l0b_5), 64, 64, 256, (int8_t)0ULL);
      if ((k1_outer_outer_inner_db + n_inner_outer) != 34) {
        set_flag(PIPE_M, PIPE_MTE1, EVENT_ID1);
      }
    }
    set_flag(PIPE_M, PIPE_V, EVENT_ID0);
    wait_flag(PIPE_M, PIPE_V, EVENT_ID0);
    copy_matrix_cc_to_ubuf(((__ubuf__ half *)CUB_7), ((__cc__ float *)C), 0, 1, 32, 0, 0, CRMODE_F32toF16_NONE);
    set_vector_mask(0xffffffffffffffff, 0xffffffffffffffff);
    if (0 < n_inner_outer) {
      wait_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
    }
    vector_dup(((__ubuf__ half *)CUB_dilation_8), (half)0.000000e+00f, (uint8_t)196ULL, (uint16_t)1ULL, (uint16_t)0ULL, (uint8_t)8ULL, (uint8_t)0ULL);
    set_vector_mask(0xffffffffffff, 0xffffffffffffffff);
    for (int32_t c1 = 0; c1 < 8; ++c1) {
      for (int32_t hw_outer_outer = 0; hw_outer_outer < 7; ++hw_outer_outer) {
        vadd(((__ubuf__ half *)CUB_dilation_8 + ((c1 * 3136) + (hw_outer_outer * 448))), ((__ubuf__ half *)CUB_7 + ((c1 * 1024) + (hw_outer_outer * 112))), ((__ubuf__ half *)CUB_dilation_8 + ((c1 * 3136) + (hw_outer_outer * 448))), (uint8_t)1ULL, (uint8_t)2ULL, (uint8_t)1ULL, (uint8_t)2ULL, (uint8_t)0ULL, (uint8_t)0ULL, (uint8_t)0ULL);
      }
    }
    set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    copy_ubuf_to_gm(((__gm__ half *)CUB_dilation_img + ((((int32_t)block_idx) * 1605632) + (n_inner_outer * 50176))), ((__ubuf__ half *)CUB_dilation_8), 0, 1, 1568, 0, 0);
    if (n_inner_outer < 31) {
      set_flag(PIPE_MTE3, PIPE_V, EVENT_ID0);
    }
    copy_matrix_cc_to_ubuf(((__ubuf__ half *)CUB_9), ((__cc__ float *)C + 8192), 0, 1, 32, 0, 0, CRMODE_F32toF16_NONE);
    if (n_inner_outer < 31) {
      set_flag(PIPE_V, PIPE_M, EVENT_ID0);
    }
    set_vector_mask(0xffffffffffffffff, 0xffffffffffffffff);
    if (0 < n_inner_outer) {
      wait_flag(PIPE_MTE3, PIPE_V, EVENT_ID1);
    }
    vector_dup(((__ubuf__ half *)CUB_dilation_10), (half)0.000000e+00f, (uint8_t)196ULL, (uint16_t)1ULL, (uint16_t)0ULL, (uint8_t)8ULL, (uint8_t)0ULL);
    set_vector_mask(0xffffffffffff, 0xffffffffffffffff);
    for (int32_t c11 = 0; c11 < 8; ++c11) {
      for (int32_t hw_outer_outer1 = 0; hw_outer_outer1 < 7; ++hw_outer_outer1) {
        vadd(((__ubuf__ half *)CUB_dilation_10 + ((c11 * 3136) + (hw_outer_outer1 * 448))), ((__ubuf__ half *)CUB_9 + ((c11 * 1024) + (hw_outer_outer1 * 112))), ((__ubuf__ half *)CUB_dilation_10 + ((c11 * 3136) + (hw_outer_outer1 * 448))), (uint8_t)1ULL, (uint8_t)2ULL, (uint8_t)1ULL, (uint8_t)2ULL, (uint8_t)0ULL, (uint8_t)0ULL, (uint8_t)0ULL);
      }
    }
    set_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    wait_flag(PIPE_V, PIPE_MTE3, EVENT_ID0);
    copy_ubuf_to_gm(((__gm__ half *)CUB_dilation_img + (((((int32_t)block_idx) * 1605632) + (n_inner_outer * 50176)) + 25088)), ((__ubuf__ half *)CUB_dilation_10), 0, 1, 1568, 0, 0);
    if (n_inner_outer < 31) {
      set_flag(PIPE_MTE3, PIPE_V, EVENT_ID1);
    }
  }
  pipe_barrier(PIPE_ALL);
}

